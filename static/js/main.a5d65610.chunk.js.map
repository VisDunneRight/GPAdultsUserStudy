{"version":3,"sources":["Section/Pages/Demographic/style.js","Section/Pages/Demographic/Demographic.js","Section/Pages/Information/style.js","Section/Pages/Information/Information.js","Section/Pages/Break/Break.js","Components/useResizeObserver.js","Components/Poca/Poca.js","Components/Area/Area.js","Components/Angle/Angle.js","Components/Length/Length.js","Components/Poua/Poua.js","Section/Pages/Section/style.js","Section/Pages/Section/Section.js","Section/Pages/Pages.js","Section/style.js","Section/index.js","App.js","reportWebVitals.js","index.js"],"names":["MyRow","styled","Row","_templateObject","_taggedTemplateLiteral","Options","_ref","property","values","onChange","type","_jsx","Form","Control","required","value","label","e","target","placeholder","as","name","children","options","map","item","index","Demographics","_ref2","page","nextPage","grabInformation","setValues","useState","fieldId","console","log","currentValues","_jsxs","onSubmit","event","preventDefault","title","attributes","row","Group","controlId","Col","lg","Label","Button","variant","TypeImage","Image","src","process","_Fragment","RenderResults","results","TypeSwitch","_ref3","data","p","image","Figure","height","width","Caption","caption","Information","_ref4","exportStudy","finish","localStorage","clear","html","line","disabled","onClick","Break","text","useResizeObserver","ref","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","margin","posX","Poca","question","domain","svgRef","useRef","wrapperRef","getBoundingClientRect","svg","d3","attr","g","select","axis","chartHeight","sizes","push","selectAll","join","d","axisLine","style","marginBottom","posY","Area","cordLength","xPos","yPos","drawAngle","translate","symbol","radialLineGen","concat","Angle","radians","Math","PI","slice","Length","generatePlot","leftTop","rightBottom","Poua","Section","saveAnswer","nextQuestion","questionIndex","array","setArray","answer","setAnswer","lengths","used","valuesUsed","usedLength","Array","isArray","length","maxLength","max","i","typeRendering","Error","Domain","Question","md","id","alert","isNaN","Number","answerName","toString","then","response","Option","practiceQuestions","savePracticeAnswer","position","Pages","siteStructure","currPage","sessionID","pages","MyContainer","Container","MyDiv","div","_templateObject2","MyProgressBar","ProgressBar","_templateObject3","props","barColor","React","Component","constructor","arguments","state","progress","currSession","answers","practiceAnswers","calculateAccuracy","dataAnswer","this","undefined","currType","total","size","answerLst","parseFloat","split","abs","parseInt","sort","a","b","setState","setProgressBar","setItem","JSON","stringify","progressLabel","checkPracticeQuestions","grouping","lst","Object","incorrect","portion","demographic","meta","field","newAnswers","Promise","resolve","jsonFile","session","templateParams","message","emailjs","send","status","error","componentDidMount","studyData","studyMeta","practice","getItem","parse","render","Navbar","expand","bg","now","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6o6bAGO,MAAMA,EAAQC,YAAOC,IAAPD,CAAWE,MAAAC,YAAA,6D,WCChC,MAAMC,EAAUC,IAAqC,IAApC,SAAEC,EAAQ,OAAEC,EAAM,SAAEC,GAAUH,EAC7C,MAAsB,SAAlBC,EAASG,KAETC,cAACC,IAAKC,QAAO,CACXC,UAAQ,EACRJ,KAAK,OACLK,MAAOP,EAAOD,EAASS,OACvBP,SAAWQ,GAAMR,EAASF,EAASS,MAAOC,EAAEC,OAAOH,OACnDI,YAAaZ,EAASS,QAGC,aAAlBT,EAASG,KAEhBC,cAACC,IAAKC,QAAO,CACXC,UAAQ,EACRM,GAAG,SACHC,KAAK,WACLZ,SAAWQ,GAAMR,EAASF,EAASS,MAAOC,EAAEC,OAAOH,OACnDA,MAAOP,EAAOD,EAASS,OAAOM,SAE7Bf,EAASgB,QAAQC,KAAI,CAACC,EAAMC,IAC3Bf,cAAA,UAAoBI,MAAOU,EAAKH,SAC7BG,GADUC,YAVd,CAgBP,EAiDaC,I,EAAAA,EA9CMC,IAA0C,IAAzC,KAAEC,EAAI,SAAEC,EAAQ,gBAAEC,GAAiBH,EACvD,MAAOpB,EAAQwB,GAAaC,mBAAS,CAAC,GAOtC,SAASxB,EAASyB,EAASnB,GACzBoB,QAAQC,IAAIrB,GACZiB,GAAWK,IACTA,EAAcH,GAAWnB,EAClBsB,IAEX,CAEA,OACEC,eAAC1B,IAAI,CAAC2B,SAdR,SAAsBC,GACpBA,EAAMC,iBACNV,EAAgBvB,GAChBsB,GACF,EAU+BR,SAAA,CAC3BX,cAACX,EAAK,CAAAsB,SACJX,cAAA,MAAAW,SAAKO,EAAKa,UAEXb,EAAKc,YACJd,EAAKc,WAAWnB,KAAI,CAACoB,EAAKlB,IACxBY,eAAC1B,IAAKiC,MAAK,CAAazB,GAAIpB,EAAO8C,UAAWF,EAAI5B,MAAMM,SAAA,CACtDX,cAACoC,IAAG,CAACC,GAAG,IAAG1B,SACTX,cAACC,IAAKqC,MAAK,CAAA3B,SAAEsB,EAAI5B,UAEnBL,cAACoC,IAAG,CAACC,GAAG,IAAG1B,SACTX,cAACN,EAAO,CAACE,SAAUqC,EAAKnC,SAAUA,EAAUD,OAAQA,QALvCkB,KASrBf,cAACX,EAAK,CAAAsB,SACJX,cAAA,WAEFA,cAACX,EAAK,CAAAsB,SACJgB,eAACS,IAAG,CAAAzB,SAAA,CACFX,cAACuC,IAAM,CAACC,QAAQ,YAAYzC,KAAK,SAAQY,SAAC,SAEhC,WAGT,E,iBCzEJ,MAAMtB,EAAQC,YAAOC,IAAPD,CAAWE,MAAAC,YAAA,6DCA1BgD,EAAY9C,IAAe,IAAd,KAAEI,GAAMJ,EACzB,OAAQI,GACN,IAAK,OACH,OAAOC,cAAC0C,IAAK,CAACC,IAAKC,gCACrB,IAAK,QACH,OAAO5C,cAAC0C,IAAK,CAACC,IAAKC,iCACrB,IAAK,SACH,OAAO5C,cAAC0C,IAAK,CAACC,IAAKC,kCACrB,IAAK,OACH,OAAO5C,cAAC0C,IAAK,CAACC,IAAKC,gCACrB,IAAK,OACH,OAAO5C,cAAC0C,IAAK,CAACC,IAAKC,gCACrB,QACE,OAAO5C,cAAA6C,WAAA,IACX,EAGIC,EAAgB7B,IAAkB,IAAjB,QAAE8B,GAAS9B,EAChC,OACEU,eAAAkB,WAAA,CAAAlC,SAAA,CACEgB,eAACtC,EAAK,CAAAsB,SAAA,CACJX,cAACoC,IAAG,CAAAzB,SAAC,kBACLX,cAACoC,IAAG,CAAAzB,SAAC,qBAGNoC,EAAQlC,KAAKoB,GACZjC,cAACoC,IAAG,CAAAzB,SACFX,cAACyC,EAAS,CAAc1C,KAAMkC,EAAI,IAAlBA,EAAI,UAGvB,EAIDe,EAAaC,IAAe,IAAd,KAAEC,GAAMD,EAE1B,GADAzB,QAAQC,IAAIyB,GACRA,EAAKC,EACP,OAAOnD,cAACX,EAAK,CAAAsB,SAAEuC,EAAKC,IACf,GAAID,EAAKE,MAAO,CACrB,MAAMA,EAAQF,EAAKE,MACnB,OACEpD,cAACX,EAAK,CAAAsB,SACJgB,eAAC0B,IAAM,CAAA1C,SAAA,CACLX,cAACqD,IAAOX,MAAK,CACXY,OAAQF,EAAME,OAASF,EAAME,OAAS,OACtCC,MAAOH,EAAMG,MAAQH,EAAMG,MAAQ,OACnCZ,IAAKC,sBAA+BQ,EAAMT,MAE5C3C,cAACqD,IAAOG,QAAO,CAAA7C,SAAEyC,EAAMK,cAI/B,CACE,OAAOzD,cAAA6C,WAAA,GACT,EA6Caa,MA1CKC,IAA+C,IAA9C,KAAEzC,EAAI,SAAEC,EAAQ,YAAEyC,EAAW,QAAEb,GAASY,EAI3D,OAHoB,IAAhBzC,EAAK2C,QACPC,aAAaC,QAGbpC,eAAAkB,WAAA,CAAAlC,SAAA,CACEX,cAACX,EAAK,CAAAsB,SACJX,cAAA,MAAAW,SAAKO,EAAKa,UAEXb,EAAK8C,MACJ9C,EAAK8C,KAAKnD,KAAI,CAACoD,EAAMlD,IACnBf,cAACgD,EAAU,CAAaE,KAAMe,GAAblD,KAErBf,cAACX,EAAK,CAAAsB,SACJX,cAAA,YAEe,IAAhBkB,EAAK2C,OACJlC,eAAAkB,WAAA,CAAAlC,SAAA,CACEX,cAACX,EAAK,CAAAsB,SACJX,cAAC8C,EAAa,CAACC,QAASA,MAE1B/C,cAACX,EAAK,CAAAsB,SACJgB,eAACS,IAAG,CAAAzB,SAAA,CACFX,cAACuC,IAAM,CAACC,QAAQ,YAAY0B,UAAQ,EAAAvD,SAAC,SAE3B,YAKhBX,cAACX,EAAK,CAAAsB,SACJgB,eAACS,IAAG,CAAAzB,SAAA,CACFX,cAACuC,IAAM,CAACC,QAAQ,YAAY2B,QAAShD,EAASR,SAAC,SAErC,WAIf,ECjFQyD,MAfDzE,IAAyB,IAAxB,KAAEuB,EAAI,SAAEC,GAAUxB,EAC/B,OACEgC,eAAAkB,WAAA,CAAAlC,SAAA,CACEX,cAACT,IAAG,CAAAoB,SACFX,cAAA,MAAAW,SAAKO,EAAKa,UAEZ/B,cAAA,OAAAW,SAAMO,EAAKmD,OAEXrE,cAACuC,IAAM,CAACC,QAAQ,YAAY2B,QAAShD,EAASR,SAAC,SAErC,MACT,E,iBCYQ2D,MAjBYC,IACzB,MAAOC,EAAYC,GAAiBnD,mBAAS,MAa7C,OAZAoD,qBAAU,KACR,MAAMC,EAAgBJ,EAAIK,QACpBC,EAAiB,IAAIC,KAAgBC,IACzCA,EAAQC,SAASC,IACfR,EAAcQ,EAAMC,YAAY,GAChC,IAGJ,OADAL,EAAeM,QAAQR,GAChB,KACLE,EAAeO,UAAUT,EAAc,CACxC,GACA,CAACJ,IACGC,CAAU,E,OCjBnB,MAAMa,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAO,CAAC,GAAI,KA+EHC,MA9EF5F,IAA2B,IAA1B,SAAE6F,EAAQ,OAAEC,GAAQ9F,EAChC,MAAM+F,EAASC,mBACTC,EAAaD,mBACbnB,EAAaF,EAAkBsB,GA2DrC,OAzDAlB,qBAAU,KACR,IAAKc,EAAU,OACf,MAAM,MAAEjC,EAAK,OAAED,GACbkB,GAAcoB,EAAWhB,QAAQiB,wBAI7BC,EAAMC,IAAUL,EAAOd,SAC7BkB,EAAIE,KAAK,UAAW,CAAC,EAAG,EAAGzC,EAAOD,IAClC,MAAM2C,EAAIH,EAAII,OAAO,KACfC,EAAO,CACX,CAACd,EAAaI,EAAO,GAAKJ,GAC1B,CAACA,EAAaI,EAAO,GAAKJ,GAC1B,CAAC9B,EAAQ8B,EAAcI,EAAO,GAAKJ,IAErC,IAAInC,EAAO,GACX,MAAMkD,EAAcX,EAAO,GAAKJ,EACN,IAAtBG,EAASa,MAAM,IACjBnD,EAAKoD,KAAK,CAAChB,EAAK,GAAIc,EAAcZ,EAASa,MAAM,GAAI,QACrDnD,EAAKoD,KAAK,CAAChB,EAAK,GAAIc,EAAcZ,EAASa,MAAM,GAAI,QAErDnD,EAAKoD,KAAK,CAAChB,EAAK,GAAIc,EAAcZ,EAASa,MAAM,GAAI,MACrDnD,EAAKoD,KAAK,CAAChB,EAAK,GAAIc,EAAcZ,EAASa,MAAM,GAAI,SAIvDJ,EAAEM,UAAU,UACTrD,KAAKA,GACLsD,KAAK,UACLR,KAAK,QAAS,SACdA,KAAK,SAAU,QACfA,KAAK,MAAOS,GAAMA,EAAE,KACpBT,KAAK,MAAOS,GAAMA,EAAE,KACpBT,KAAK,OAAQ,SACbA,KAAK,IAAK,GAEb,MAAMU,EAAWX,MACjBE,EAAEM,UAAU,QACTrD,KAAK,CAACiD,IACNK,KAAK,QACLR,KAAK,KAAM5F,GAAUsG,EAAStG,KAC9B4F,KAAK,OAAQ,QACbA,KAAK,SAAU,SAElBC,EAAEM,UAAU,cACTrD,KAAKA,GACLsD,KAAK,QACLG,MAAM,UAAW,GACjBX,KAAK,QAAS,aACd3B,MAAMoC,GAAMA,EAAE,KACdT,KAAK,KAAMS,GACHA,EAAE,KAEVT,KAAK,KAAMS,GAAMA,EAAE,GAAK,KACxBT,KAAK,cAAe,SAAS,GAC/B,CAACxB,EAAYiB,EAAQD,IAGtBxF,cAAA,OACEuE,IAAKqB,EACLe,MAAO,CACLC,aAAc,OACdrD,MAAO,QACPD,OAAQmC,EAAO,GAAKJ,EAAaA,GACjC1E,SAEFX,cAAA,OAAKuE,IAAKmB,EAAO/E,SACfX,cAAA,WAEE,E,OC5EV,MAAMqF,EAAgB,GAAhBA,EAAuC,GAEvCC,EAAO,CAAC,IAAK,KACbuB,EAAO,CAAC,IAAK,KAkEJC,MAhEFnH,IAA2B,IAA1B,SAAE6F,EAAQ,OAAEC,GAAQ9F,EAChC,MAAM+F,EAASC,mBACTC,EAAaD,mBACbnB,EAAaF,EAAkBsB,GA6CrC,OA3CAlB,qBAAU,KACR,IAAKc,EAAU,OACf,MAAM,MAAEjC,EAAK,OAAED,GACbkB,GAAcoB,EAAWhB,QAAQiB,wBAI7BC,EAAMC,IAAUL,EAAOd,SAC7BkB,EAAIE,KAAK,UAAW,CAAC,EAAG,EAAGzC,EAAOD,IAClC,MAAM2C,EAAIH,EAAII,OAAO,KACfE,EAA0B,EAAZX,EAAO,GAASJ,EACpC,IAAInC,EAAO,GACe,IAAtBsC,EAASa,MAAM,IACjBnD,EAAKoD,KAAK,CAAChB,EAAK,GAAIc,EAAcS,EAAK,GAAIrB,EAASa,MAAM,GAAI,QAC9DnD,EAAKoD,KAAK,CAAChB,EAAK,GAAIc,EAAcS,EAAK,GAAIrB,EAASa,MAAM,GAAI,QAE9DnD,EAAKoD,KAAK,CAAChB,EAAK,GAAIc,EAAcS,EAAK,GAAIrB,EAASa,MAAM,GAAI,MAC9DnD,EAAKoD,KAAK,CAAChB,EAAK,GAAIc,EAAcS,EAAK,GAAIrB,EAASa,MAAM,GAAI,SAIhEJ,EAAEM,UAAU,UACTrD,KAAKA,GACLsD,KAAK,UACLR,KAAK,QAAS,SACdA,KAAK,SAAU,QACfA,KAAK,MAAOS,GAAMA,EAAE,KACpBT,KAAK,MAAOS,GAAMA,EAAE,KACpBT,KAAK,OAAQ,SACbA,KAAK,KAAMS,GAAMA,EAAE,KAEtBR,EAAEM,UAAU,cACTrD,KAAKA,GACLsD,KAAK,QACLG,MAAM,UAAW,GACjBX,KAAK,QAAS,aACd3B,MAAMoC,GAAMA,EAAE,KACdT,KAAK,KAAMS,GACHA,EAAE,KAEVT,KAAK,KAAMS,GAAMnD,EAAS+B,IAC1BW,KAAK,cAAe,SAAS,GAC/B,CAACxB,EAAYiB,EAAQD,IAEtBxF,cAAA,OACEuE,IAAKqB,EACLe,MAAO,CACLC,aAAc,OACdrD,MAAO,QACPD,OAAoB,EAAZmC,EAAO,GAASJ,EAAaA,GACrC1E,SAEFX,cAAA,OAAKuE,IAAKmB,EAAO/E,SACfX,cAAA,WAEE,E,OCjEV,MAAMqF,EAAgB,GAAhBA,EAAuC,GACvC0B,EAAa,GACbC,EAAO,IACPC,EAAO,IAEPC,EAAYA,CAACjB,EAAGH,EAAK5C,EAAMiE,EAAWzG,EAAM0G,KAChD,MACMV,EADgBX,KACLsB,CAAcnE,GAC/B+C,EAAEM,UAAU,SAAW7F,GACpBwC,KAAK,CAACA,IACNsD,KAAK,QACLR,KAAK,QAAS,QAAUtF,GACxBsF,KAAK,IAAKU,GACVV,KAAK,OAAQ,QACbA,KAAK,SAAU,SAElBF,EACGS,UAAU,SAAW7F,GACrBsF,KAAK,YAAY,aAADsB,OAAeH,EAAU,GAAE,MAAAG,OAAKH,EAAU,GAAE,MAE/DlB,EAAEM,UAAU,cAAgB7F,GACzBwC,KAAK,CAACiE,IACNX,KAAK,QACLG,MAAM,UAAW,GACjBX,KAAK,QAAS,aAAetF,GAC7B2D,MAAMoC,GAAMW,IACZpB,KAAK,KAAMS,GAAMA,EAAE,KACnBT,KAAK,KAAMS,GAAMA,EAAE,GAAKM,EAAa1B,EAAgB,EAAI,IACzDW,KAAK,cAAe,SAAS,EA2EnBuB,MAxED5H,IAA2B,IAA1B,SAAE6F,EAAQ,OAAEC,GAAQ9F,EACjC,MAAM+F,EAASC,mBACTC,EAAaD,mBACbnB,EAAaF,EAAkBsB,GAqDrC,OAnDAlB,qBAAU,KACR,IAAKc,EAAU,OACf,MAAM,MAAEjC,EAAK,OAAED,GACbkB,GAAcoB,EAAWhB,QAAQiB,wBAI7BC,EAAMC,IAAUL,EAAOd,SAC7BkB,EAAIE,KAAK,UAAW,CAAC,EAAG,EAAGzC,EAAOD,IAClC,MAAM2C,EAAIH,EAAII,OAAO,KAEfsB,EAAWpH,GACPA,EAAQqH,KAAKC,GAAM,IAG7B,IAAIxE,EAAO,GACe,IAAtBsC,EAASa,MAAM,IACjBnD,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,IAAKU,IACvC7D,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,IAAK,IACvCnD,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,GAAKb,EAASa,MAAM,IAAKU,IAC3D7D,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,IAAKU,IACvC7D,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,IAAK,IACvCnD,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,GAAKb,EAASa,MAAM,IAAKU,IAC3DG,EAAUjB,EAAGH,EAAK5C,EAAKyE,MAAM,EAAG,GAAI,CAACX,EAAMC,GAAO,UAAW,OAC7DC,EACEjB,EACAH,EACA5C,EAAKyE,MAAM,EAAG,GACd,CAACX,IAAyBC,GAC1B,UACA,OAGF/D,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,IAAKU,IACvC7D,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,IAAK,IACvCnD,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,GAAKb,EAASa,MAAM,IAAKU,IAC3D7D,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,IAAKU,IACvC7D,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,IAAK,IACvCnD,EAAKoD,KAAK,CAACkB,EAAQhC,EAASa,MAAM,GAAKb,EAASa,MAAM,IAAKU,IAC3DG,EAAUjB,EAAGH,EAAK5C,EAAKyE,MAAM,EAAG,GAAI,CAACX,EAAMC,GAAO,UAAW,KAC7DC,EACEjB,EACAH,EACA5C,EAAKyE,MAAM,EAAG,GACd,CAACX,IAAyBC,GAC1B,UACA,OAEJ,GACC,CAACzC,EAAYiB,EAAQD,IAGtBxF,cAAA,OACEuE,IAAKqB,EACLe,MAAO,CACLC,aAAc,OACdrD,MAAO,QACPD,OAAQmC,EAAO,GAAKJ,EAAaA,GACjC1E,SAEFX,cAAA,OAAKuE,IAAKmB,EAAO/E,SACfX,cAAA,WAEE,E,OCnGV,MAAMqF,EAAgB,GAAhBA,EAAuC,GACvC2B,EAAO,CAAC,GAAI,KA+GHY,OA7GAjI,IAA2B,IAA1B,SAAE6F,EAAQ,OAAEC,GAAQ9F,EAClC,MAAM+F,EAASC,mBACTC,EAAaD,mBACbnB,EAAaF,EAAkBsB,GA0FrC,OAxFAlB,qBAAU,KACR,IAAKc,EAAU,OACf,MAAM,MAAEjC,EAAK,OAAED,GACbkB,GAAcoB,EAAWhB,QAAQiB,wBAI7BC,EAAMC,IAAUL,EAAOd,SAC7BkB,EAAIE,KAAK,UAAW,CAAC,EAAG,EAAGzC,EAAOD,IAClC,MAAM2C,EAAIH,EAAII,OAAO,KAMfE,GAJUX,EAAO,GACPA,EAAO,GACEA,EAAO,GAEZA,EAAO,GAAKJ,GAChC,IAAInC,EAAO,GACe,IAAtBsC,EAASa,MAAM,IACjBnD,EAAKoD,KAAK,CACRU,EAAK,GACLZ,EAAcZ,EAASa,MAAM,GAAKb,EAASa,MAAM,GACjD,GACAb,EAASa,MAAM,GACf,QAEFnD,EAAKoD,KAAK,CACRU,EAAK,GACLZ,EAAcZ,EAASa,MAAM,GAAKb,EAASa,MAAM,GACjD,GACAb,EAASa,MAAM,GACf,QAGFnD,EAAKoD,KAAK,CACRU,EAAK,GACLZ,EAAcZ,EAASa,MAAM,GAAKb,EAASa,MAAM,GACjD,GACAb,EAASa,MAAM,GACf,MAEFnD,EAAKoD,KAAK,CACRU,EAAK,GACLZ,EAAcZ,EAASa,MAAM,GAAKb,EAASa,MAAM,GACjD,GACAb,EAASa,MAAM,GACf,SAKJJ,EAAEM,UAAU,SACTrD,KAAKA,GACLsD,KAAK,QACLR,KAAK,QAAS,QACdA,KAAK,SAAU,QACfA,KAAK,KAAMS,GAAMA,EAAE,KACnBT,KAAK,KAAMS,GAAMA,EAAE,KACnBT,KAAK,SAAUS,GAAMA,EAAE,KACvBT,KAAK,UAAWS,GAAMA,EAAE,KACxBT,KAAK,OAAQ,SAUhBC,EAAEM,UAAU,cACTrD,KAAKA,GACLsD,KAAK,QACLG,MAAM,UAAW,GACjBA,MAAM,OAAQ,mBACdX,KAAK,QAAS,aACd3B,MAAMoC,GAAMA,EAAE,KACdT,KAAK,KAAMS,GACNA,EAAE,KAAOO,EAAK,GACTP,EAAE,GAAK,GAEPA,EAAE,GAAKA,EAAE,GAAK,KAIxBT,KAAK,KAAMS,GAAMA,EAAE,GAAKA,EAAE,GAAK,IAC/BT,KAAK,cAAe,SAAS,GAC/B,CAACxB,EAAYiB,EAAQD,IAGtBxF,cAAA,OACEuE,IAAKqB,EACLe,MAAO,CACLC,aAAc,OACdrD,MAAO,QACPD,OAAQmC,EAAO,GAAKJ,EAAaA,GACjC1E,SAEFX,cAAA,OAAKuE,IAAKmB,EAAO/E,SACfX,cAAA,WAEE,E,OC5GV,MAAMqF,GAAgB,GAAhBA,GAAuC,GAAvCA,GAAiD,GAAjDA,GAA8D,GAG9DwC,GAAeA,CAAC/B,EAAKN,EAAUsC,EAASC,EAAarH,KAEzD,MAAMuF,EAAIH,EAAII,OAAO,KACfC,EAAO,CACX,CAAC2B,EAAQ,GAAIA,EAAQ,IACrB,CAACA,EAAQ,GAAIC,EAAY,IACzB,CAACA,EAAY,GAAIA,EAAY,KAE/B,IAAI7E,EAAO,GACXA,EAAKoD,KAAK,CAVC,GAUMyB,EAAY,GAAKvC,EAAS,GAAIA,EAAS,KAGxDS,EAAEM,UAAU,UAAY7F,GACrBwC,KAAKA,GACLsD,KAAK,UACLR,KAAK,QAAS,SAAWtF,GACzBsF,KAAK,SAAU,QACfA,KAAK,MAAOS,GAAMA,EAAE,KACpBT,KAAK,MAAOS,GAAMA,EAAE,KACpBT,KAAK,OAAQ,SACbA,KAAK,IAAK,GAEb,MAAMU,EAAWX,MACjBE,EAAEM,UAAU,SAAW7F,GACpBwC,KAAK,CAACiD,IACNK,KAAK,QACLR,KAAK,QAAS,QAAUtF,GACxBsF,KAAK,KAAM5F,GAAUsG,EAAStG,KAC9B4F,KAAK,OAAQ,QACbA,KAAK,SAAU,SAElBC,EAAEM,UAAU,cAAgB7F,GACzBwC,KAAKA,GACLsD,KAAK,QACLG,MAAM,UAAW,GACjBX,KAAK,QAAS,aAAetF,GAC7B2D,MAAMoC,GAAMA,EAAE,KACdT,KAAK,KAAMS,GACHA,EAAE,KAEVT,KAAK,KAAMS,GAAMA,EAAE,GAAK,KACxBT,KAAK,cAAe,SAAS,EAuDnBgC,I,GAAAA,GApDFrI,IAA2B,IAA1B,SAAE6F,EAAQ,OAAEC,GAAQ9F,EAChC,MAAM+F,EAASC,mBACTC,EAAaD,mBACbnB,EAAaF,EAAkBsB,GAiCrC,OA/BAlB,qBAAU,KACR,IAAKc,EAAU,OACf,MAAM,MAAEjC,EAAK,OAAED,GACbkB,GAAcoB,EAAWhB,QAAQiB,wBAE7BC,EAAMC,IAAUL,EAAOd,SAC7BkB,EAAIE,KAAK,UAAW,CAAC,EAAG,EAAGzC,EAAOD,IAClC,IAAIJ,EAAO,GACe,IAAtBsC,EAASa,MAAM,IACjBnD,EAAKoD,KAAK,CAACd,EAASa,MAAM,GAAI,QAC9BnD,EAAKoD,KAAK,CAACd,EAASa,MAAM,GAAI,QAE9BnD,EAAKoD,KAAK,CAACd,EAASa,MAAM,GAAI,MAC9BnD,EAAKoD,KAAK,CAACd,EAASa,MAAM,GAAI,SAEhCwB,GACE/B,EACA5C,EAAK,GACL,CAACmC,GAAaA,IACd,CAACA,GAtEY,IAsEcI,EAAO,GAAKJ,IACvC,UAEFwC,GACE/B,EACA5C,EAAK,GACL,CAACmC,GAAaI,EAAO,GAAKJ,GAAaA,IACvC,CAACA,GA7EY,IA6E0B,EAAZI,EAAO,GAASJ,GAAaA,IACxD,SACD,GACA,CAACb,EAAYiB,EAAQD,IAGtBxF,cAAA,OACEuE,IAAKqB,EACLe,MAAO,CACLC,aAAc,OACdrD,MAvFW,IAwFXD,OAAoB,EAAZmC,EAAO,GAASJ,GAAaA,GAAgBA,IACrD1E,SAEFX,cAAA,OAAKuE,IAAKmB,EAAO/E,SACfX,cAAA,WAEE,ECjGH,MAAMX,GAAQC,YAAOC,IAAPD,CAAWE,QAAAC,YAAA,6DCsHjBwI,OAhHCtI,IAA8D,IAA7D,KAAEuB,EAAI,KAAEgC,EAAI,WAAEgF,EAAU,aAAEC,EAAY,cAAEC,GAAezI,EACtE,MAAO0I,EAAOC,GAAYhH,mBAAS,KAC5BiH,EAAQC,GAAalH,mBAAS,IA0BrCoD,qBAAU,KACR,IAAI+D,EAAU,GACVJ,EAAQ,GACZ,IAAK,IAAIK,KAAQxH,EAAKyH,WAAY,CAChC,IAAIC,EAAa,EAEfA,EADEC,MAAMC,QAAQ5F,EAAKwF,IACRxF,EAAKwF,GAAMK,OAEX,EAGfN,EAAQnC,KAAKsC,EACf,CACA,MAAMI,EAAYvB,KAAKwB,OAAOR,GAC9B,IAAK,IAAIS,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAClC,IAAIjH,EAAM,CAAC,EACPlB,EAAQ,EACZ,IAAK,IAAI2H,KAAQxH,EAAKyH,WAAY,CAChC,MAAMC,EAAaH,EAAQ1H,GAC3BA,IACmB,IAAf6H,EACF3G,EAAIyG,GAAQxF,EAAKwF,GACRE,IAAeI,EACxB/G,EAAIyG,GAAQxF,EAAKwF,GAAMQ,GAEvB1H,QAAQC,IACN,4DACAuH,EACA,QACAN,EAGN,CACAL,EAAM/B,KAAKrE,EACb,CACAqG,EAASD,EAAM,GACd,CAACnF,EAAMhC,IAmBV,OACES,eAAAkB,WAAA,CAAAlC,SAAA,CACEX,cAACX,GAAK,CAAAsB,SAnBYwI,EAACjG,EAAMmF,EAAOtH,EAAO0E,KACzC,OAAQvC,EAAKnD,MACX,IAAK,OACH,OAAOC,cAACuF,EAAI,CAACC,SAAU6C,EAAMtH,GAAQ0E,OAAQA,IAC/C,IAAK,QACH,OAAOzF,cAACuH,EAAK,CAAC/B,SAAU6C,EAAMtH,GAAQ0E,OAAQA,IAChD,IAAK,OACH,OAAOzF,cAAC8G,EAAI,CAACtB,SAAU6C,EAAMtH,GAAQ0E,OAAQA,IAC/C,IAAK,SACH,OAAOzF,cAAC4H,GAAM,CAACpC,SAAU6C,EAAMtH,GAAQ0E,OAAQA,IACjD,IAAK,OACH,OAAOzF,cAACgI,GAAI,CAACxC,SAAU6C,EAAMtH,GAAQ0E,OAAQA,IAC/C,QACE,MAAM,IAAI2D,MAAM,oCACpB,EAKUD,CAAcjG,EAAMmF,EAAOD,EAAelF,EAAKmG,UACvDrJ,cAACX,GAAK,CAAAsB,SAAE0H,EAAMD,IAAkBC,EAAMD,GAAekB,WACrDtJ,cAACX,GAAK,CAAAsB,SACJX,cAACoC,IAAG,CAACmH,GAAI,EAAE5I,SACTX,cAACC,IAAKC,QAAO,CACXH,KAAK,OACLS,YAAY,GACZgJ,GAAG,SACH1J,SAAWQ,IAAMR,OArETM,EAqEkBE,EAAEC,OAAOH,WApE3CoI,EAAUpI,GADZ,IAAkBA,CAqEkC,EAC1CA,MAAOmI,QAIbvI,cAACX,GAAK,CAAAsB,SACJX,cAAA,WAEFA,cAACX,GAAK,CAAAsB,SACJgB,eAACS,IAAG,CAAAzB,SAAA,CACFX,cAACuC,IAAM,CAACC,QAAQ,YAAY2B,QAnGpC,SAA4BtC,GAE1B,GADAA,EAAMC,iBACS,KAAXyG,EAEF,YADAkB,MAAM,6CAED,IAA8B,IAA1BC,MAAMC,OAAOpB,IAEtB,YADAkB,MAAM,0DAED,GAAIE,OAAOpB,GAAU,GAAKoB,OAAOpB,GAAU,IAEhD,YADAkB,MAAM,yCAGR,MAAMG,EAAa1G,EAAK0G,WAAWxB,GAAeyB,WAClDrI,QAAQC,IAAIyG,GACZA,EAAW0B,EAAYrB,GAAQuB,MAAK,SAAUC,GAC5CvB,EAAU,IACVL,EAAaE,EAAMU,OACrB,GACF,EAiFgEpI,SAAC,SAE/C,WAGb,EC/GP,MAAMqJ,GAASrK,IAYR,IAZS,KACduB,EAAI,KACJgC,EAAI,kBACJ+G,EAAiB,gBACjB7I,EAAe,WACf8G,EAAU,mBACVgC,EAAkB,cAClB9B,EAAa,YACbxE,EAAW,aACXuE,EAAY,SACZhH,EAAQ,QACR4B,GACDpD,EACC,MAAkB,gBAAduB,EAAKnB,KAELC,cAACgB,EAAY,CACXE,KAAMA,EACNE,gBAAiBA,EACjBD,SAAUA,IAGS,gBAAdD,EAAKnB,MASS,UAAdmB,EAAKnB,KAPZC,cAAC0D,EAAW,CACVxC,KAAMA,EACNC,SAAUA,EACVyC,YAAaA,EACbb,QAASA,IAYU,YAAd7B,EAAKnB,KAEZC,cAACiI,GAAO,CACN/G,KAAMA,EACNgC,KAAMA,EAAKhC,EAAKiJ,UAChBjC,WAAYA,EACZE,cAAeA,EACfD,aAAcA,IAGK,aAAdjH,EAAKnB,KAEZC,cAACiI,GAAO,CACN/G,KAAMA,EACNgC,KAAM+G,EAAkB/I,EAAKiJ,UAC7BjC,WAAYgC,EACZ9B,cAAeA,EACfD,aAAcA,IAGK,UAAdjH,EAAKnB,KACPC,cAACoE,EAAK,CAAClD,KAAMA,EAAMC,SAAUA,KAEpCK,QAAQC,IAAI,eAAgBP,EAAKnB,MAC1BC,cAAA6C,WAAA,IACT,EAwCauH,I,SAAAA,GArCDnJ,IAcP,IAdQ,cACboJ,EAAa,KACbnH,EAAI,gBACJ9B,EAAe,kBACf6I,EAAiB,SACjBK,EAAQ,UACRC,EAAS,WACTrC,EAAU,mBACVgC,EAAkB,SAClB/I,EAAQ,YACRyC,EAAW,aACXuE,EAAY,cACZC,EAAa,QACbrF,GACD9B,EACC,OACEjB,cAAA6C,WAAA,CAAAlC,SACG0J,EAAcG,OACbxK,cAACgK,GAAM,CAEL9I,KAAMmJ,EAAcG,MAAMF,GAC1BpH,KAAMA,EAAKqH,GACXN,kBAAmBA,EACnB7I,gBAAiBA,EACjB8G,WAAYA,EACZgC,mBAAoBA,EACpBtG,YAAaA,EACbzC,SAAUA,EACVgH,aAAcA,EACdC,cAAeA,EACfrF,QAASA,GAXJuH,IAcR,E,oBCvGA,MAAMG,GAAcnL,YAAOoL,KAAPpL,CAAiBE,QAAAC,YAAA,4DAK/BkL,GAAQrL,IAAOsL,IAAGC,QAAApL,YAAA,wGAOlBqL,GAAgBxL,YAAOyL,KAAPzL,CAAmB0L,QAAAvL,YAAA,0CAEpCwL,GAAUA,EAAMC,W,iCCP5B,MAAMjD,WAAgBkD,IAAMC,UAAUC,cAAA,SAAAC,WAAA,KACpCC,MAAQ,CACNrI,KAAM,CAAC,EACPmH,cAAe,CAAC,EAChBmB,SAAU,EACVC,YAAa,CAAEnB,SAAU,EAAGd,GAAI,EAAGpB,cAAe,GAClDsD,QAAS,GACTC,gBAAiB,GACjB5I,QAAS,GACTkH,kBAAmB,IACnB,KAoCF2B,kBAAoB,KAClB,MAAMC,EAAaC,KAAKP,MAAMrI,KAAK4I,KAAKP,MAAME,YAAYjC,IAE1D,IAAIzG,EAAU,QACKgJ,IAAfF,IAIJA,EAAWhL,KAAI,CAACd,EAAMgB,KACpB,MAAMiL,EAAWjM,EAAKA,KACtB,IAAIkM,EAAQ,EACZ,MAAMC,EAAOnM,EAAK6J,WAAWb,OAC7B,IAAK,IAAIG,EAAI,EAAGA,EAAIgD,EAAMhD,IAAK,CAC7B,MAAMiD,EAAYL,KAAKP,MAAMG,QAAQxC,EAAInI,EAAQmL,GACjD1K,QAAQC,IAAI0K,GACZ3K,QAAQC,IAAIyH,EAAInI,EAAQmL,EAAMJ,KAAKP,MAAMG,SACzC,MAAMnD,EAAS6D,WAAWD,EAAU,GAAGE,MAAM,KAAK,IAClDJ,GAASxE,KAAK6E,IAAa,IAAT/D,EAAegE,SAASJ,EAAU,IACtD,CACApJ,EAAQuD,KAAK,CAAC0F,EAAUC,GAAO,IAEjClJ,EAAQyJ,MAAK,SAAUC,EAAGC,GACxB,OAAOD,EAAE,GAAKC,EAAE,EAClB,IACAZ,KAAKa,SAAS,CAAE5J,QAASA,IAAU,EACnC,KAEF5B,SAAW,KACT,MAAMsK,EAAcK,KAAKP,MAAME,YAC/BA,EAAYnB,UAAY,EACxBmB,EAAYrD,cAAgB,EAC5B0D,KAAKc,eAAe,EAAG,IAEvB,MAAM1L,EAAO4K,KAAKP,MAAMlB,cAAcG,MAAMiB,EAAYnB,UAQxDxG,aAAa+I,QAAQ,cAAeC,KAAKC,UAAUtB,IACnDK,KAAKa,SAAS,CAAElB,YAAaA,IACzBvK,EAAK2C,SAA0B,IAAhB3C,EAAK2C,QACtBiI,KAAKlI,aACP,EACA,KAEFgJ,eAAiB,CAACxM,EAAOC,KACvByD,aAAa+I,QAAQ,WAAYzM,GACjC0D,aAAa+I,QAAQ,gBAAiBxM,GACtCyL,KAAKa,SAAS,CAAEnB,SAAUpL,EAAO4M,cAAe3M,GAAQ,EACxD,KAEF8H,aAAgBY,IACd,MAAM0C,EAAcK,KAAKP,MAAME,YAC/BA,EAAYrD,eAAiB,EACzBqD,EAAYrD,gBAAkBW,GAIlC+C,KAAKc,eACFnB,EAAYrD,cAAgBW,EAAU,IACvC,YAAc0C,EAAYrD,cAAgB,MAAQW,GAEpDjF,aAAa+I,QAAQ,cAAeC,KAAKC,UAAUtB,IACnDK,KAAKa,SAAS,CAAElB,YAAaA,KAR3BK,KAAK3K,UAQoC,EAC3C,KAEF8L,uBAAyB,KAEvB,MAAMvB,EAAUI,KAAKP,MAAMI,gBAC3B,IAAIuB,EAAW,CAAC,EAChB,IAAK,IAAI3E,KAAUmD,EAAS,CAC1B,MAAM3L,EAAOwI,EAAO,GAAG8D,MAAM,KAAK,GAC9BtM,KAAQmN,EACVA,EAASnN,GAAMuG,KAAKiC,GAEpB2E,EAASnN,GAAQ,CAACwI,EAEtB,CACA,IAAK,MAAO,CAAE4E,KAAQC,OAAOrI,QAAQmI,GAAW,CAC9C,IAAIG,EAAY,EAChB,IAAK,MAAM9E,KAAU4E,EAAK,CACxB,MAAMG,EAAU/E,EAAO,GAAG8D,MAAM,KAAK,GAC/BtJ,EAAUwJ,SAAShE,EAAO,IAC5Bd,KAAK6E,IAAIvJ,EAAoB,IAAVuK,IAAkB,IACvCD,GAEJ,CACA,GAAIA,EAAY,EACd,OAAO,CAEX,CACA,OAAO,CAAI,EACX,KAEFjM,gBAAmB8B,IACjB1B,QAAQC,IAAI,oBACZ,MAAMgK,EAAcK,KAAKP,MAAME,YAC/BA,EAAY8B,YAAcrK,EAC1B,MAAMqH,EAAYuB,KAAKP,MAAMlB,cAAcmD,KAAKjD,UAC5CA,KAAarH,IACfuI,EAAYjC,GAAKtG,EAAKqH,GAAa,IAErCzG,aAAa+I,QAAQ,cAAeC,KAAKC,UAAUtB,IACnDK,KAAKa,SAAS,CAAElB,YAAaA,GAAc,EAC3C,KAEFvD,WAAa,CAACuF,EAAOlF,KACnB,MAAMmF,EAAa5B,KAAKP,MAAMG,QAAQ/D,QAItC,OAHA+F,EAAWpH,KAAK,CAACmH,EAAOlF,IACxBzE,aAAa+I,QAAQ,UAAWC,KAAKC,UAAUW,IAC/C5B,KAAKa,SAAS,CAAEjB,QAASgC,IAClBC,QAAQC,QAAQF,EAAW,EAClC,KAEFxD,mBAAqB,CAACuD,EAAOlF,KAC3B,MAAMmF,EAAa5B,KAAKP,MAAMI,gBAAgBhE,QAI9C,OAHA+F,EAAWpH,KAAK,CAACmH,EAAOlF,IACxBzE,aAAa+I,QAAQ,kBAAmBC,KAAKC,UAAUW,IACvD5B,KAAKa,SAAS,CAAEhB,gBAAiB+B,IAC1BC,QAAQC,QAAQF,EAAW,EAClC,KAEF9J,YAAc,KACZkI,KAAKF,oBAEL,IAAIiC,EAAW,CACbC,QAAShC,KAAKP,MAAME,YACpBC,QAASI,KAAKP,MAAMG,SAGtB,IACIqC,EAAiB,CACnBC,QAFWlB,KAAKC,UAAUc,EAAU,KAAM,IAK5CI,KACGC,KACC,kBACA,mBACAH,EACA,8BAEDjE,MACC,SAAUC,GACRvI,QAAQC,IAAI,WAAYsI,EAASoE,OAAQpE,EAAS1F,KACpD,IACA,SAAU+J,GACR5M,QAAQC,IAAI,YAAa2M,EAC3B,GACD,CACH,CA3LFC,oBACE,MAAMnL,EAAOoL,EACPjE,EAAgBkE,EAChBC,EAAWvE,EAAkB,GACnC6B,KAAKa,SAAS,CACZzJ,KAAMA,EACNmH,cAAeA,EACfJ,kBAAmBuE,IAErB,MAAMhD,EAAW1H,aAAa2K,QAAQ,YAChCzB,EAAgBlJ,aAAa2K,QAAQ,iBACrChD,EAAc3H,aAAa2K,QAAQ,eACnC/C,EAAU5H,aAAa2K,QAAQ,WAC/B9C,EAAkB7H,aAAa2K,QAAQ,mBAEzCjD,GACFM,KAAKa,SAAS,CAAEnB,SAAUA,IAExBwB,GACFlB,KAAKa,SAAS,CAAEK,cAAeA,IAE7BvB,EACFK,KAAKa,SAAS,CAAElB,YAAaqB,KAAK4B,MAAMjD,KAExCK,KAAKa,SAAS,CAAElB,YAAa,CAAEnB,SAAU,EAAGd,GAAI,KAE9CkC,GACFI,KAAKa,SAAS,CAAEjB,QAASoB,KAAK4B,MAAMhD,KAElCC,GACFG,KAAKa,SAAS,CAAEhB,gBAAiBmB,KAAK4B,MAAM/C,IAEhD,CA4JAgD,SACE,OACE3O,cAAC2K,GAAK,CAAAhK,SACJgB,eAAC8I,GAAW,CAAA9J,SAAA,CACVX,cAAC4O,KAAM,CAACC,OAAO,KAAKrM,QAAQ,QAAQsM,GAAG,QAAOnO,SAC5CX,cAAC8K,GAAa,CACZiE,IAAKjD,KAAKP,MAAMC,SAChBnL,MAAOyL,KAAKP,MAAMyB,kBAGtBhN,cAACoK,GAAK,CACJC,cAAeyB,KAAKP,MAAMlB,cAC1BC,SAC4B,MAA1BwB,KAAKP,MAAME,YACPK,KAAKP,MAAME,YAAYnB,cACvByB,EAEN7I,KAAM4I,KAAKP,MAAMrI,KACjBqH,UAC4B,MAA1BuB,KAAKP,MAAME,YACPK,KAAKP,MAAME,YAAYjC,QACvBuC,EAEN9B,kBAAmB6B,KAAKP,MAAMtB,kBAC9B7I,gBAAiB0K,KAAK1K,gBACtB8G,WAAY4D,KAAK5D,WACjBgC,mBAAoB4B,KAAK5B,mBACzB/I,SAAU2K,KAAK3K,SACfgH,aAAc2D,KAAK3D,aACnBvE,YAAakI,KAAKlI,YAClBb,QAAS+I,KAAKP,MAAMxI,QACpBqF,cAC4B,MAA1B0D,KAAKP,MAAME,YACPK,KAAKP,MAAME,YAAYrD,mBACvB2D,QAMhB,EAGa9D,UCtPA+G,OAJf,WACE,OAAOhP,cAACiI,GAAO,GACjB,ECOegH,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrF,MAAKnK,IAAkD,IAAjD,OAAEyP,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS7P,EACpEyP,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,E,OCFFO,IAASd,OACP3O,cAACmL,IAAMuE,WAAU,CAAA/O,SACfX,cAACgP,GAAG,MAENW,SAASC,eAAe,SAM1BX,I","file":"static/js/main.a5d65610.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nexport const MyRow = styled(Row)`\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n","import { Button, Form, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { MyRow } from \"./style\";\r\n\r\nconst Options = ({ property, values, onChange }) => {\r\n  if (property.type === \"text\") {\r\n    return (\r\n      <Form.Control\r\n        required\r\n        type=\"text\"\r\n        value={values[property.label]}\r\n        onChange={(e) => onChange(property.label, e.target.value)}\r\n        placeholder={property.label}\r\n      />\r\n    );\r\n  } else if (property.type === \"combobox\") {\r\n    return (\r\n      <Form.Control\r\n        required\r\n        as=\"select\"\r\n        name=\"selected\"\r\n        onChange={(e) => onChange(property.label, e.target.value)}\r\n        value={values[property.label]}\r\n      >\r\n        {property.options.map((item, index) => (\r\n          <option key={index} value={item}>\r\n            {item}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n\r\nconst Demographics = ({ page, nextPage, grabInformation }) => {\r\n  const [values, setValues] = useState({});\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    grabInformation(values);\r\n    nextPage();\r\n  }\r\n  function onChange(fieldId, value) {\r\n    console.log(value);\r\n    setValues((currentValues) => {\r\n      currentValues[fieldId] = value;\r\n      return currentValues;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <MyRow>\r\n        <h1>{page.title}</h1>\r\n      </MyRow>\r\n      {page.attributes &&\r\n        page.attributes.map((row, index) => (\r\n          <Form.Group key={index} as={MyRow} controlId={row.label}>\r\n            <Col lg=\"2\">\r\n              <Form.Label>{row.label}</Form.Label>\r\n            </Col>\r\n            <Col lg=\"2\">\r\n              <Options property={row} onChange={onChange} values={values} />\r\n            </Col>\r\n          </Form.Group>\r\n        ))}\r\n      <MyRow>\r\n        <br />\r\n      </MyRow>\r\n      <MyRow>\r\n        <Col>\r\n          <Button variant=\"secondary\" type=\"submit\">\r\n            Next\r\n          </Button>{\" \"}\r\n        </Col>\r\n      </MyRow>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Demographics;\r\n","import styled from \"styled-components\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nexport const MyRow = styled(Row)`\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n","import { Col, Button, Image, Figure } from \"react-bootstrap\";\r\nimport { MyRow } from \"./style\";\r\n\r\nconst TypeImage = ({ type }) => {\r\n  switch (type) {\r\n    case \"Area\":\r\n      return <Image src={process.env.PUBLIC_URL + \"/Area.png\"} />;\r\n    case \"Angle\":\r\n      return <Image src={process.env.PUBLIC_URL + \"/Angle.png\"} />;\r\n    case \"Length\":\r\n      return <Image src={process.env.PUBLIC_URL + \"/Length.png\"} />;\r\n    case \"POUA\":\r\n      return <Image src={process.env.PUBLIC_URL + \"/POUA.png\"} />;\r\n    case \"POCA\":\r\n      return <Image src={process.env.PUBLIC_URL + \"/POCA.png\"} />;\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nconst RenderResults = ({ results }) => {\r\n  return (\r\n    <>\r\n      <MyRow>\r\n        <Col>More Accurate</Col>\r\n        <Col>Less Accurate</Col>\r\n      </MyRow>\r\n\r\n      {results.map((row) => (\r\n        <Col>\r\n          <TypeImage key={row[0]} type={row[0]} />\r\n        </Col>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TypeSwitch = ({ data }) => {\r\n  console.log(data);\r\n  if (data.p) {\r\n    return <MyRow>{data.p}</MyRow>;\r\n  } else if (data.image) {\r\n    const image = data.image;\r\n    return (\r\n      <MyRow>\r\n        <Figure>\r\n          <Figure.Image\r\n            height={image.height ? image.height : \"100%\"}\r\n            width={image.width ? image.width : \"100%\"}\r\n            src={process.env.PUBLIC_URL + \"/\" + image.src}\r\n          />\r\n          <Figure.Caption>{image.caption}</Figure.Caption>\r\n        </Figure>\r\n      </MyRow>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nconst Information = ({ page, nextPage, exportStudy, results }) => {\r\n  if (page.finish === true) {\r\n    localStorage.clear();\r\n  }\r\n  return (\r\n    <>\r\n      <MyRow>\r\n        <h1>{page.title}</h1>\r\n      </MyRow>\r\n      {page.html &&\r\n        page.html.map((line, index) => (\r\n          <TypeSwitch key={index} data={line}></TypeSwitch>\r\n        ))}\r\n      <MyRow>\r\n        <br />\r\n      </MyRow>\r\n      {page.finish === true ? (\r\n        <>\r\n          <MyRow>\r\n            <RenderResults results={results} />\r\n          </MyRow>\r\n          <MyRow>\r\n            <Col>\r\n              <Button variant=\"secondary\" disabled>\r\n                Done\r\n              </Button>{\" \"}\r\n            </Col>\r\n          </MyRow>\r\n        </>\r\n      ) : (\r\n        <MyRow>\r\n          <Col>\r\n            <Button variant=\"secondary\" onClick={nextPage}>\r\n              Next\r\n            </Button>{\" \"}\r\n          </Col>\r\n        </MyRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import { Row, Button } from \"react-bootstrap\";\r\n\r\nconst Break = ({ page, nextPage }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <h1>{page.title}</h1>\r\n      </Row>\r\n      <pre>{page.text}</pre>\r\n      {/* </Row> */}\r\n      <Button variant=\"secondary\" onClick={nextPage}>\r\n        Next\r\n      </Button>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Break;\r\n","import { useEffect, useState } from \"react\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\n/**\r\n * Hook, that returns the current dimensions of an HTML element.\r\n * Doesn't play well with SVG.\r\n */\r\n\r\nconst useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport useResizeObserver from \"../useResizeObserver\";\r\nimport \"./style.css\";\r\n\r\nconst margin = { top: 20, right: 30, bottom: 30, left: 30 };\r\nconst posX = [50, 100];\r\nconst Poca = ({ question, domain }) => {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    if (!question) return;\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n    // if(!properties) return;\r\n\r\n    //Grab the svg and set its viewbox\r\n    const svg = d3.select(svgRef.current);\r\n    svg.attr(\"viewBox\", [0, 0, width, height]);\r\n    const g = svg.select(\"g\");\r\n    const axis = [\r\n      [margin.left, domain[0] + margin.top],\r\n      [margin.left, domain[1] + margin.top],\r\n      [width - margin.right, domain[1] + margin.top],\r\n    ];\r\n    let data = [];\r\n    const chartHeight = domain[1] + margin.top;\r\n    if (question.sizes[2] === 0) {\r\n      data.push([posX[0], chartHeight - question.sizes[0], \"100\"]);\r\n      data.push([posX[1], chartHeight - question.sizes[1], \"?\"]);\r\n    } else {\r\n      data.push([posX[0], chartHeight - question.sizes[1], \"?\"]);\r\n      data.push([posX[1], chartHeight - question.sizes[0], \"100\"]);\r\n    }\r\n\r\n    //Data rename\r\n    g.selectAll(\".point\")\r\n      .data(data)\r\n      .join(\"circle\")\r\n      .attr(\"class\", \"point\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"cx\", (d) => d[0])\r\n      .attr(\"cy\", (d) => d[1])\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"r\", 5);\r\n\r\n    const axisLine = d3.line();\r\n    g.selectAll(\"path\")\r\n      .data([axis])\r\n      .join(\"path\")\r\n      .attr(\"d\", (value) => axisLine(value))\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"black\");\r\n\r\n    g.selectAll(\".mytooltip\")\r\n      .data(data)\r\n      .join(\"text\")\r\n      .style(\"opacity\", 1)\r\n      .attr(\"class\", \"mytooltip\")\r\n      .text((d) => d[2])\r\n      .attr(\"x\", (d) => {\r\n        return d[0];\r\n      })\r\n      .attr(\"y\", (d) => d[1] - 10)\r\n      .attr(\"text-anchor\", \"middle\");\r\n  }, [dimensions, domain, question]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{\r\n        marginBottom: \"2rem\",\r\n        width: \"400px\",\r\n        height: domain[1] + margin.top + margin.bottom,\r\n      }}\r\n    >\r\n      <svg ref={svgRef}>\r\n        <g />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Poca;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport useResizeObserver from \"../useResizeObserver\";\r\nimport \"./style.css\";\r\n\r\nconst margin = { top: 20, right: 30, bottom: 30, left: 30 };\r\n\r\nconst posX = [150, 420];\r\nconst posY = [150, 150];\r\n\r\nconst Area = ({ question, domain }) => {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    if (!question) return;\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n    // if(!properties) return;\r\n\r\n    //Grab the svg and set its viewbox\r\n    const svg = d3.select(svgRef.current);\r\n    svg.attr(\"viewBox\", [0, 0, width, height]);\r\n    const g = svg.select(\"g\");\r\n    const chartHeight = domain[1] * 2 + margin.top;\r\n    let data = [];\r\n    if (question.sizes[2] === 0) {\r\n      data.push([posX[0], chartHeight - posY[0], question.sizes[0], \"100\"]);\r\n      data.push([posX[1], chartHeight - posY[1], question.sizes[1], \"?\"]);\r\n    } else {\r\n      data.push([posX[0], chartHeight - posY[0], question.sizes[1], \"?\"]);\r\n      data.push([posX[1], chartHeight - posY[1], question.sizes[0], \"100\"]);\r\n    }\r\n\r\n    //Data rename\r\n    g.selectAll(\".point\")\r\n      .data(data)\r\n      .join(\"circle\")\r\n      .attr(\"class\", \"point\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"cx\", (d) => d[0])\r\n      .attr(\"cy\", (d) => d[1])\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"r\", (d) => d[2]);\r\n\r\n    g.selectAll(\".mytooltip\")\r\n      .data(data)\r\n      .join(\"text\")\r\n      .style(\"opacity\", 1)\r\n      .attr(\"class\", \"mytooltip\")\r\n      .text((d) => d[3])\r\n      .attr(\"x\", (d) => {\r\n        return d[0];\r\n      })\r\n      .attr(\"y\", (d) => height - margin.bottom)\r\n      .attr(\"text-anchor\", \"middle\");\r\n  }, [dimensions, domain, question]);\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{\r\n        marginBottom: \"2rem\",\r\n        width: \"600px\",\r\n        height: domain[1] * 2 + margin.top + margin.bottom,\r\n      }}\r\n    >\r\n      <svg ref={svgRef}>\r\n        <g />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Area;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport useResizeObserver from \"../useResizeObserver\";\r\nimport \"./style.css\";\r\n\r\nconst margin = { top: 20, right: 30, bottom: 30, left: 30 };\r\nconst cordLength = 80;\r\nconst xPos = 100;\r\nconst yPos = 100;\r\n\r\nconst drawAngle = (g, svg, data, translate, name, symbol) => {\r\n  const radialLineGen = d3.lineRadial();\r\n  const axisLine = radialLineGen(data);\r\n  g.selectAll(\".path_\" + name)\r\n    .data([data])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"path_\" + name)\r\n    .attr(\"d\", axisLine)\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"black\");\r\n\r\n  svg\r\n    .selectAll(\".path_\" + name)\r\n    .attr(\"transform\", `translate(${translate[0]}, ${translate[1]})`);\r\n\r\n  g.selectAll(\".mytooltip_\" + name)\r\n    .data([translate])\r\n    .join(\"text\")\r\n    .style(\"opacity\", 1)\r\n    .attr(\"class\", \"mytooltip_\" + name)\r\n    .text((d) => symbol)\r\n    .attr(\"x\", (d) => d[0])\r\n    .attr(\"y\", (d) => d[1] + cordLength + margin.bottom / 2 + 4)\r\n    .attr(\"text-anchor\", \"middle\");\r\n};\r\n\r\nconst Angle = ({ question, domain }) => {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    if (!question) return;\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n    // if(!properties) return;\r\n\r\n    //Grab the svg and set its viewbox\r\n    const svg = d3.select(svgRef.current);\r\n    svg.attr(\"viewBox\", [0, 0, width, height]);\r\n    const g = svg.select(\"g\");\r\n\r\n    const radians = (value) => {\r\n      return (value * Math.PI) / 180;\r\n    };\r\n\r\n    let data = [];\r\n    if (question.sizes[2] === 0) {\r\n      data.push([radians(question.sizes[3]), cordLength]);\r\n      data.push([radians(question.sizes[3]), 0]);\r\n      data.push([radians(question.sizes[3] + question.sizes[0]), cordLength]);\r\n      data.push([radians(question.sizes[4]), cordLength]);\r\n      data.push([radians(question.sizes[4]), 0]);\r\n      data.push([radians(question.sizes[4] + question.sizes[1]), cordLength]);\r\n      drawAngle(g, svg, data.slice(0, 3), [xPos, yPos], \"radial1\", \"100\");\r\n      drawAngle(\r\n        g,\r\n        svg,\r\n        data.slice(3, 6),\r\n        [xPos + cordLength * 2.1, yPos],\r\n        \"radial2\",\r\n        \"?\"\r\n      );\r\n    } else {\r\n      data.push([radians(question.sizes[4]), cordLength]);\r\n      data.push([radians(question.sizes[4]), 0]);\r\n      data.push([radians(question.sizes[4] + question.sizes[1]), cordLength]);\r\n      data.push([radians(question.sizes[3]), cordLength]);\r\n      data.push([radians(question.sizes[3]), 0]);\r\n      data.push([radians(question.sizes[3] + question.sizes[0]), cordLength]);\r\n      drawAngle(g, svg, data.slice(0, 3), [xPos, yPos], \"radial1\", \"?\");\r\n      drawAngle(\r\n        g,\r\n        svg,\r\n        data.slice(3, 6),\r\n        [xPos + cordLength * 2.1, yPos],\r\n        \"radial2\",\r\n        \"100\"\r\n      );\r\n    }\r\n  }, [dimensions, domain, question]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{\r\n        marginBottom: \"2rem\",\r\n        width: \"400px\",\r\n        height: domain[1] + margin.top + margin.bottom,\r\n      }}\r\n    >\r\n      <svg ref={svgRef}>\r\n        <g />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Angle;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport useResizeObserver from \"../useResizeObserver\";\r\nimport \"./style.css\";\r\n\r\nconst margin = { top: 20, right: 30, bottom: 30, left: 30 };\r\nconst xPos = [50, 100];\r\n\r\nconst Length = ({ question, domain }) => {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    if (!question) return;\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n    // if(!properties) return;\r\n\r\n    //Grab the svg and set its viewbox\r\n    const svg = d3.select(svgRef.current);\r\n    svg.attr(\"viewBox\", [0, 0, width, height]);\r\n    const g = svg.select(\"g\");\r\n    const axis = [\r\n      [margin.left, domain[0] + margin.top],\r\n      [margin.left, domain[1] + margin.top],\r\n      [width - margin.right, domain[1] + margin.top],\r\n    ];\r\n    const chartHeight = domain[1] + margin.top;\r\n    let data = [];\r\n    if (question.sizes[2] === 0) {\r\n      data.push([\r\n        xPos[0],\r\n        chartHeight - question.sizes[3] - question.sizes[0],\r\n        25,\r\n        question.sizes[0],\r\n        \"100\",\r\n      ]);\r\n      data.push([\r\n        xPos[1],\r\n        chartHeight - question.sizes[4] - question.sizes[1],\r\n        25,\r\n        question.sizes[1],\r\n        \"?\",\r\n      ]);\r\n    } else {\r\n      data.push([\r\n        xPos[0],\r\n        chartHeight - question.sizes[4] - question.sizes[1],\r\n        25,\r\n        question.sizes[1],\r\n        \"?\",\r\n      ]);\r\n      data.push([\r\n        xPos[1],\r\n        chartHeight - question.sizes[3] - question.sizes[0],\r\n        25,\r\n        question.sizes[0],\r\n        \"100\",\r\n      ]);\r\n    }\r\n\r\n    //Data rename\r\n    g.selectAll(\".rect\")\r\n      .data(data)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"rect\")\r\n      .attr(\"stroke\", \"#000\")\r\n      .attr(\"x\", (d) => d[0])\r\n      .attr(\"y\", (d) => d[1])\r\n      .attr(\"width\", (d) => d[2])\r\n      .attr(\"height\", (d) => d[3])\r\n      .attr(\"fill\", \"black\");\r\n\r\n    // const axisLine = d3.line();\r\n    // g.selectAll(\"path\")\r\n    //   .data([axis])\r\n    //   .join(\"path\")\r\n    //   .attr(\"d\", (value) => axisLine(value))\r\n    //   .attr(\"fill\", \"none\")\r\n    //   .attr(\"stroke\", \"black\");\r\n\r\n    g.selectAll(\".mytooltip\")\r\n      .data(data)\r\n      .join(\"text\")\r\n      .style(\"opacity\", 1)\r\n      .style(\"font\", \"14px sans-serif\")\r\n      .attr(\"class\", \"mytooltip\")\r\n      .text((d) => d[4])\r\n      .attr(\"x\", (d) => {\r\n        if (d[0] === xPos[0]) {\r\n          return d[0] - 20;\r\n        } else {\r\n          return d[0] + d[2] + 15;\r\n        }\r\n      })\r\n\r\n      .attr(\"y\", (d) => d[1] + d[3] / 2)\r\n      .attr(\"text-anchor\", \"middle\");\r\n  }, [dimensions, domain, question]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{\r\n        marginBottom: \"2rem\",\r\n        width: \"400px\",\r\n        height: domain[1] + margin.top + margin.bottom,\r\n      }}\r\n    >\r\n      <svg ref={svgRef}>\r\n        <g />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Length;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport useResizeObserver from \"../useResizeObserver\";\r\nimport \"./style.css\";\r\n\r\nconst margin = { top: 20, right: 30, bottom: 30, left: 30, between: 50 };\r\nconst chartWidth = 400;\r\nconst posX = 50;\r\nconst generatePlot = (svg, question, leftTop, rightBottom, name) => {\r\n  //Grab the svg and set its viewbox\r\n  const g = svg.select(\"g\");\r\n  const axis = [\r\n    [leftTop[0], leftTop[1]],\r\n    [leftTop[0], rightBottom[1]],\r\n    [rightBottom[0], rightBottom[1]],\r\n  ];\r\n  let data = [];\r\n  data.push([posX, rightBottom[1] - question[0], question[1]]);\r\n\r\n  // Data rename\r\n  g.selectAll(\".point_\" + name)\r\n    .data(data)\r\n    .join(\"circle\")\r\n    .attr(\"class\", \"point_\" + name)\r\n    .attr(\"stroke\", \"#000\")\r\n    .attr(\"cx\", (d) => d[0])\r\n    .attr(\"cy\", (d) => d[1])\r\n    .attr(\"fill\", \"black\")\r\n    .attr(\"r\", 5);\r\n\r\n  const axisLine = d3.line();\r\n  g.selectAll(\".path_\" + name)\r\n    .data([axis])\r\n    .join(\"path\")\r\n    .attr(\"class\", \"path_\" + name)\r\n    .attr(\"d\", (value) => axisLine(value))\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke\", \"black\");\r\n\r\n  g.selectAll(\".mytooltip_\" + name)\r\n    .data(data)\r\n    .join(\"text\")\r\n    .style(\"opacity\", 1)\r\n    .attr(\"class\", \"mytooltip_\" + name)\r\n    .text((d) => d[2])\r\n    .attr(\"x\", (d) => {\r\n      return d[0];\r\n    })\r\n    .attr(\"y\", (d) => d[1] - 10)\r\n    .attr(\"text-anchor\", \"middle\");\r\n};\r\n\r\nconst Poua = ({ question, domain }) => {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    if (!question) return;\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n    // if(!properties) return;\r\n    const svg = d3.select(svgRef.current);\r\n    svg.attr(\"viewBox\", [0, 0, width, height]);\r\n    let data = [];\r\n    if (question.sizes[2] === 0) {\r\n      data.push([question.sizes[0], \"100\"]);\r\n      data.push([question.sizes[1], \"?\"]);\r\n    } else {\r\n      data.push([question.sizes[1], \"?\"]);\r\n      data.push([question.sizes[0], \"100\"]);\r\n    }\r\n    generatePlot(\r\n      svg,\r\n      data[0],\r\n      [margin.left, margin.top],\r\n      [margin.left + chartWidth, domain[1] + margin.top],\r\n      \"chart1\"\r\n    );\r\n    generatePlot(\r\n      svg,\r\n      data[1],\r\n      [margin.left, domain[1] + margin.top + margin.between],\r\n      [margin.left + chartWidth, domain[1] * 2 + margin.top + margin.between],\r\n      \"chart2\"\r\n    );\r\n  }, [dimensions, domain, question]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{\r\n        marginBottom: \"2rem\",\r\n        width: chartWidth,\r\n        height: domain[1] * 2 + margin.top + margin.bottom + margin.between,\r\n      }}\r\n    >\r\n      <svg ref={svgRef}>\r\n        <g />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Poua;\r\n","import styled from \"styled-components\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nexport const MyRow = styled(Row)`\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n","import { Col, Button, Form } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Poca from \"../../../Components/Poca/Poca\";\r\nimport Area from \"../../../Components/Area/Area\";\r\nimport Angle from \"../../../Components/Angle/Angle\";\r\nimport Length from \"../../../Components/Length/Length\";\r\nimport Poua from \"../../../Components/Poua/Poua\";\r\nimport { MyRow } from \"./style\";\r\n\r\nconst Section = ({ page, data, saveAnswer, nextQuestion, questionIndex }) => {\r\n  const [array, setArray] = useState([]);\r\n  const [answer, setAnswer] = useState(\"\");\r\n\r\n  function handleNextQuestion(event) {\r\n    event.preventDefault();\r\n    if (answer === \"\") {\r\n      alert(\"Please type a number before hitting next.\");\r\n      return;\r\n    } else if (isNaN(Number(answer)) === true) {\r\n      alert(\"Please make sure to type a number before hitting next.\");\r\n      return;\r\n    } else if (Number(answer) < 0 || Number(answer) > 100) {\r\n      alert(\"The number must be between 0 and 100.\");\r\n      return;\r\n    }\r\n    const answerName = data.answerName[questionIndex].toString();\r\n    console.log(saveAnswer);\r\n    saveAnswer(answerName, answer).then(function (response) {\r\n      setAnswer(\"\");\r\n      nextQuestion(array.length);\r\n    });\r\n  }\r\n\r\n  function onChange(value) {\r\n    setAnswer(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let lengths = [];\r\n    let array = [];\r\n    for (let used of page.valuesUsed) {\r\n      let usedLength = 0;\r\n      if (Array.isArray(data[used])) {\r\n        usedLength = data[used].length;\r\n      } else {\r\n        usedLength = 1;\r\n      }\r\n\r\n      lengths.push(usedLength);\r\n    }\r\n    const maxLength = Math.max(...lengths);\r\n    for (var i = 0; i < maxLength; i++) {\r\n      let row = {};\r\n      let index = 0;\r\n      for (let used of page.valuesUsed) {\r\n        const usedLength = lengths[index];\r\n        index++;\r\n        if (usedLength === 1) {\r\n          row[used] = data[used];\r\n        } else if (usedLength === maxLength) {\r\n          row[used] = data[used][i];\r\n        } else {\r\n          console.log(\r\n            \"Something went wrong with number entries don't match max:\",\r\n            maxLength,\r\n            \"or 1:\",\r\n            used\r\n          );\r\n        }\r\n      }\r\n      array.push(row);\r\n    }\r\n    setArray(array);\r\n  }, [data, page]);\r\n\r\n  const typeRendering = (data, array, index, domain) => {\r\n    switch (data.type) {\r\n      case \"POCA\":\r\n        return <Poca question={array[index]} domain={domain} />;\r\n      case \"Angle\":\r\n        return <Angle question={array[index]} domain={domain} />;\r\n      case \"Area\":\r\n        return <Area question={array[index]} domain={domain} />;\r\n      case \"Length\":\r\n        return <Length question={array[index]} domain={domain} />;\r\n      case \"POUA\":\r\n        return <Poua question={array[index]} domain={domain} />;\r\n      default:\r\n        throw new Error(\"Missing type of testing Section.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MyRow>{typeRendering(data, array, questionIndex, data.Domain)}</MyRow>\r\n      <MyRow>{array[questionIndex] && array[questionIndex].Question}</MyRow>\r\n      <MyRow>\r\n        <Col md={2}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            id=\"Answer\"\r\n            onChange={(e) => onChange(e.target.value)}\r\n            value={answer}\r\n          />\r\n        </Col>\r\n      </MyRow>\r\n      <MyRow>\r\n        <br />\r\n      </MyRow>\r\n      <MyRow>\r\n        <Col>\r\n          <Button variant=\"secondary\" onClick={handleNextQuestion}>\r\n            Next\r\n          </Button>{\" \"}\r\n        </Col>\r\n      </MyRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport Demographics from \"./Demographic/Demographic\";\r\nimport Information from \"./Information/Information\";\r\nimport Break from \"./Break/Break\";\r\nimport Section from \"./Section/Section\";\r\n\r\nconst Option = ({\r\n  page,\r\n  data,\r\n  practiceQuestions,\r\n  grabInformation,\r\n  saveAnswer,\r\n  savePracticeAnswer,\r\n  questionIndex,\r\n  exportStudy,\r\n  nextQuestion,\r\n  nextPage,\r\n  results,\r\n}) => {\r\n  if (page.type === \"Demographic\") {\r\n    return (\r\n      <Demographics\r\n        page={page}\r\n        grabInformation={grabInformation}\r\n        nextPage={nextPage}\r\n      />\r\n    );\r\n  } else if (page.type === \"Information\") {\r\n    return (\r\n      <Information\r\n        page={page}\r\n        nextPage={nextPage}\r\n        exportStudy={exportStudy}\r\n        results={results}\r\n      />\r\n    );\r\n  } else if (page.type === \"Check\") {\r\n    return (\r\n      <Information\r\n        page={page}\r\n        nextPage={nextPage}\r\n        exportStudy={exportStudy}\r\n        results={results}\r\n      />\r\n    );\r\n  } else if (page.type === \"Section\") {\r\n    return (\r\n      <Section\r\n        page={page}\r\n        data={data[page.position]}\r\n        saveAnswer={saveAnswer}\r\n        questionIndex={questionIndex}\r\n        nextQuestion={nextQuestion}\r\n      />\r\n    );\r\n  } else if (page.type === \"Practice\") {\r\n    return (\r\n      <Section\r\n        page={page}\r\n        data={practiceQuestions[page.position]}\r\n        saveAnswer={savePracticeAnswer}\r\n        questionIndex={questionIndex}\r\n        nextQuestion={nextQuestion}\r\n      />\r\n    );\r\n  } else if (page.type === \"Break\") {\r\n    return <Break page={page} nextPage={nextPage} />;\r\n  } else {\r\n    console.log(\"Page missing\", page.type);\r\n    return <></>;\r\n  }\r\n};\r\n\r\nconst Pages = ({\r\n  siteStructure,\r\n  data,\r\n  grabInformation,\r\n  practiceQuestions,\r\n  currPage,\r\n  sessionID,\r\n  saveAnswer,\r\n  savePracticeAnswer,\r\n  nextPage,\r\n  exportStudy,\r\n  nextQuestion,\r\n  questionIndex,\r\n  results,\r\n}) => {\r\n  return (\r\n    <>\r\n      {siteStructure.pages && (\r\n        <Option\r\n          key={currPage}\r\n          page={siteStructure.pages[currPage]}\r\n          data={data[sessionID]}\r\n          practiceQuestions={practiceQuestions}\r\n          grabInformation={grabInformation}\r\n          saveAnswer={saveAnswer}\r\n          savePracticeAnswer={savePracticeAnswer}\r\n          exportStudy={exportStudy}\r\n          nextPage={nextPage}\r\n          nextQuestion={nextQuestion}\r\n          questionIndex={questionIndex}\r\n          results={results}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pages;\r\n","import { Container, ProgressBar } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const MyContainer = styled(Container)`\r\n  background-color: white;\r\n  min-height: 600px;\r\n`;\r\n\r\nexport const MyDiv = styled.div`\r\n  background-color: lightgray;\r\n  display: flex;\r\n  flex-flow: column;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const MyProgressBar = styled(ProgressBar)`\r\n  width: 100vw;\r\n  color: ${(props) => props.barColor};\r\n`;\r\n","import React from \"react\";\r\nimport studyData from \"../Data/studyData.json\";\r\nimport studyMeta from \"../Data/studyMeta.json\";\r\nimport practiceQuestions from \"../Data/dataForPractice.json\";\r\nimport Pages from \"./Pages/Pages\";\r\nimport { MyContainer, MyDiv, MyProgressBar } from \"./style\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport nodemailer from \"nodemailer\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nclass Section extends React.Component {\r\n  state = {\r\n    data: {},\r\n    siteStructure: {},\r\n    progress: 0,\r\n    currSession: { currPage: 0, id: 0, questionIndex: 0 },\r\n    answers: [],\r\n    practiceAnswers: [],\r\n    results: [],\r\n    practiceQuestions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const data = studyData;\r\n    const siteStructure = studyMeta;\r\n    const practice = practiceQuestions[0];\r\n    this.setState({\r\n      data: data,\r\n      siteStructure: siteStructure,\r\n      practiceQuestions: practice,\r\n    });\r\n    const progress = localStorage.getItem(\"Progress\");\r\n    const progressLabel = localStorage.getItem(\"ProgressLabel\");\r\n    const currSession = localStorage.getItem(\"currSession\");\r\n    const answers = localStorage.getItem(\"answers\");\r\n    const practiceAnswers = localStorage.getItem(\"practiceAnswers\");\r\n\r\n    if (progress) {\r\n      this.setState({ progress: progress });\r\n    }\r\n    if (progressLabel) {\r\n      this.setState({ progressLabel: progressLabel });\r\n    }\r\n    if (currSession) {\r\n      this.setState({ currSession: JSON.parse(currSession) });\r\n    } else {\r\n      this.setState({ currSession: { currPage: 0, id: 0 } });\r\n    }\r\n    if (answers) {\r\n      this.setState({ answers: JSON.parse(answers) });\r\n    }\r\n    if (practiceAnswers) {\r\n      this.setState({ practiceAnswers: JSON.parse(practiceAnswers) });\r\n    }\r\n  }\r\n\r\n  calculateAccuracy = () => {\r\n    const dataAnswer = this.state.data[this.state.currSession.id];\r\n\r\n    let results = [];\r\n    if (dataAnswer === undefined) {\r\n      return;\r\n    }\r\n\r\n    dataAnswer.map((type, index) => {\r\n      const currType = type.type;\r\n      let total = 0.0;\r\n      const size = type.answerName.length;\r\n      for (let i = 0; i < size; i++) {\r\n        const answerLst = this.state.answers[i + index * size];\r\n        console.log(answerLst);\r\n        console.log(i + index * size, this.state.answers);\r\n        const answer = parseFloat(answerLst[0].split(\",\")[1]);\r\n        total += Math.abs(answer * 100 - parseInt(answerLst[1]));\r\n      }\r\n      results.push([currType, total]);\r\n    });\r\n    results.sort(function (a, b) {\r\n      return a[1] - b[1];\r\n    });\r\n    this.setState({ results: results });\r\n  };\r\n\r\n  nextPage = () => {\r\n    const currSession = this.state.currSession;\r\n    currSession.currPage += 1;\r\n    currSession.questionIndex = 0;\r\n    this.setProgressBar(0, \"\");\r\n\r\n    const page = this.state.siteStructure.pages[currSession.currPage];\r\n\r\n    // if (page.type === \"Check\") {\r\n    //   if (!this.checkPracticeQuestions()) {\r\n    //     currSession.currPage = this.state.siteStructure.pages.length - 1;\r\n    //   }\r\n    // }\r\n\r\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\r\n    this.setState({ currSession: currSession });\r\n    if (page.finish && page.finish === true) {\r\n      this.exportStudy();\r\n    }\r\n  };\r\n\r\n  setProgressBar = (value, label) => {\r\n    localStorage.setItem(\"Progress\", value);\r\n    localStorage.setItem(\"ProgressLabel\", label);\r\n    this.setState({ progress: value, progressLabel: label });\r\n  };\r\n\r\n  nextQuestion = (length) => {\r\n    const currSession = this.state.currSession;\r\n    currSession.questionIndex += 1;\r\n    if (currSession.questionIndex === length) {\r\n      this.nextPage();\r\n      return;\r\n    }\r\n    this.setProgressBar(\r\n      (currSession.questionIndex / length) * 100,\r\n      \"Question \" + currSession.questionIndex + \" / \" + length\r\n    );\r\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\r\n    this.setState({ currSession: currSession });\r\n  };\r\n\r\n  checkPracticeQuestions = () => {\r\n    //group similar properties\r\n    const answers = this.state.practiceAnswers;\r\n    let grouping = {};\r\n    for (let answer of answers) {\r\n      const type = answer[0].split(\",\")[0];\r\n      if (type in grouping) {\r\n        grouping[type].push(answer);\r\n      } else {\r\n        grouping[type] = [answer];\r\n      }\r\n    }\r\n    for (const [, lst] of Object.entries(grouping)) {\r\n      let incorrect = 0;\r\n      for (const answer of lst) {\r\n        const portion = answer[0].split(\",\")[1];\r\n        const results = parseInt(answer[1]);\r\n        if (Math.abs(results - portion * 100) >= 30) {\r\n          incorrect++;\r\n        }\r\n      }\r\n      if (incorrect > 1) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  grabInformation = (data) => {\r\n    console.log(\"grab Information\");\r\n    const currSession = this.state.currSession;\r\n    currSession.demographic = data;\r\n    const sessionID = this.state.siteStructure.meta.sessionID;\r\n    if (sessionID in data) {\r\n      currSession.id = data[sessionID] % 38;\r\n    }\r\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\r\n    this.setState({ currSession: currSession });\r\n  };\r\n\r\n  saveAnswer = (field, answer) => {\r\n    const newAnswers = this.state.answers.slice();\r\n    newAnswers.push([field, answer]);\r\n    localStorage.setItem(\"answers\", JSON.stringify(newAnswers));\r\n    this.setState({ answers: newAnswers });\r\n    return Promise.resolve(newAnswers);\r\n  };\r\n\r\n  savePracticeAnswer = (field, answer) => {\r\n    const newAnswers = this.state.practiceAnswers.slice();\r\n    newAnswers.push([field, answer]);\r\n    localStorage.setItem(\"practiceAnswers\", JSON.stringify(newAnswers));\r\n    this.setState({ practiceAnswers: newAnswers });\r\n    return Promise.resolve(newAnswers);\r\n  };\r\n\r\n  exportStudy = () => {\r\n    this.calculateAccuracy();\r\n\r\n    let jsonFile = {\r\n      session: this.state.currSession,\r\n      answers: this.state.answers,\r\n    };\r\n\r\n    var jsonse = JSON.stringify(jsonFile, null, 2);\r\n    var templateParams = {\r\n      message: jsonse,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        \"service_uqj09id\",\r\n        \"template_x7pswr4\",\r\n        templateParams,\r\n        \"user_Kx3a55DXNWeuop9rui5RR\"\r\n      )\r\n      .then(\r\n        function (response) {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        function (error) {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <MyDiv>\r\n        <MyContainer>\r\n          <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n            <MyProgressBar\r\n              now={this.state.progress}\r\n              label={this.state.progressLabel}\r\n            />\r\n          </Navbar>\r\n          <Pages\r\n            siteStructure={this.state.siteStructure}\r\n            currPage={\r\n              this.state.currSession != null\r\n                ? this.state.currSession.currPage\r\n                : undefined\r\n            }\r\n            data={this.state.data}\r\n            sessionID={\r\n              this.state.currSession != null\r\n                ? this.state.currSession.id\r\n                : undefined\r\n            }\r\n            practiceQuestions={this.state.practiceQuestions}\r\n            grabInformation={this.grabInformation}\r\n            saveAnswer={this.saveAnswer}\r\n            savePracticeAnswer={this.savePracticeAnswer}\r\n            nextPage={this.nextPage}\r\n            nextQuestion={this.nextQuestion}\r\n            exportStudy={this.exportStudy}\r\n            results={this.state.results}\r\n            questionIndex={\r\n              this.state.currSession != null\r\n                ? this.state.currSession.questionIndex\r\n                : undefined\r\n            }\r\n          />\r\n        </MyContainer>\r\n      </MyDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import './App.css';\r\nimport Section from './Section'\r\n\r\nfunction App() {\r\n  return <Section/>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}