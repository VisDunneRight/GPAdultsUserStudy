{"version":3,"sources":["Section/Pages/Demographic/style.js","Section/Pages/Demographic/Demographic.js","Section/Pages/Information/style.js","Section/Pages/Information/Information.js","Section/Pages/Break/Break.js","Components/useResizeObserver.js","Components/Poca/Poca.js","Components/Area/Area.js","Components/Angle/Angle.js","Components/Length/Length.js","Components/Poua/Poua.js","Section/Pages/Section/style.js","Section/Pages/Section/Section.js","Section/Pages/Pages.js","Section/style.js","Section/index.js","App.js","reportWebVitals.js","index.js"],"names":["MyRow","styled","Row","Options","property","values","onChange","type","Form","Control","required","value","label","e","target","placeholder","as","name","options","map","item","index","Demographics","page","nextPage","grabInformation","useState","setValues","fieldId","console","log","currentValues","onSubmit","event","preventDefault","title","attributes","row","Group","controlId","Col","lg","Label","Button","variant","TypeImage","Image","src","process","RenderResults","results","TypeSwitch","data","p","image","Figure","height","width","Caption","caption","Information","exportStudy","finish","localStorage","clear","html","line","disabled","onClick","Break","text","useResizeObserver","ref","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","margin","posX","Poca","question","domain","svgRef","useRef","wrapperRef","getBoundingClientRect","svg","d3","attr","g","select","axis","chartHeight","sizes","push","selectAll","join","d","axisLine","style","marginBottom","posY","Area","cordLength","xPos","yPos","drawAngle","translate","symbol","radialLineGen","Angle","radians","Math","PI","slice","Length","generatePlot","leftTop","rightBottom","Poua","Section","saveAnswer","nextQuestion","questionIndex","array","setArray","answer","setAnswer","lengths","valuesUsed","used","usedLength","Array","isArray","length","maxLength","max","i","Error","typeRendering","Domain","Question","md","id","isNaN","Number","alert","answerName","toString","then","response","Option","practiceQuestions","savePracticeAnswer","Demographic","position","Pages","siteStructure","currPage","sessionID","pages","MyContainer","Container","MyDiv","div","MyProgressBar","ProgressBar","props","barColor","state","progress","currSession","answers","practiceAnswers","calculateAccuracy","dataAnswer","undefined","currType","total","size","answerLst","parseFloat","split","abs","parseInt","sort","a","b","setState","setProgressBar","checkPracticeQuestions","setItem","JSON","stringify","progressLabel","grouping","Object","lst","incorrect","portion","demographic","meta","field","newAnswers","Promise","resolve","jsonFile","session","templateParams","message","emailjs","send","status","error","studyData","studyMeta","practice","this","getItem","parse","Navbar","expand","bg","now","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97b4a002.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Button, Form, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { MyRow } from \"./style\";\n\nconst Options = ({ property, values, onChange }) => {\n  if (property.type === \"text\") {\n    return (\n      <Form.Control\n        required\n        type=\"text\"\n        value={values[property.label]}\n        onChange={(e) => onChange(property.label, e.target.value)}\n        placeholder={property.label}\n      />\n    );\n  } else if (property.type === \"combobox\") {\n    return (\n      <Form.Control\n        required\n        as=\"select\"\n        name=\"selected\"\n        onChange={(e) => onChange(property.label, e.target.value)}\n        value={values[property.label]}\n      >\n        {property.options.map((item, index) => (\n          <option key={index} value={item}>\n            {item}\n          </option>\n        ))}\n      </Form.Control>\n    );\n  }\n};\n\nconst Demographics = ({ page, nextPage, grabInformation }) => {\n  const [values, setValues] = useState({});\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    grabInformation(values);\n    nextPage();\n  }\n  function onChange(fieldId, value) {\n    console.log(value);\n    setValues((currentValues) => {\n      currentValues[fieldId] = value;\n      return currentValues;\n    });\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <MyRow>\n        <h1>{page.title}</h1>\n      </MyRow>\n      {page.attributes &&\n        page.attributes.map((row, index) => (\n          <Form.Group key={index} as={MyRow} controlId={row.label}>\n            <Col lg=\"2\">\n              <Form.Label>{row.label}</Form.Label>\n            </Col>\n            <Col lg=\"2\">\n              <Options property={row} onChange={onChange} values={values} />\n            </Col>\n          </Form.Group>\n        ))}\n      <MyRow>\n        <br />\n      </MyRow>\n      <MyRow>\n        <Col>\n          <Button variant=\"secondary\" type=\"submit\">\n            Next\n          </Button>{\" \"}\n        </Col>\n      </MyRow>\n    </Form>\n  );\n};\n\nexport default Demographics;\n","import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Col, Button, Image, Figure } from \"react-bootstrap\";\nimport { MyRow } from \"./style\";\n\nconst TypeImage = ({ type }) => {\n  switch (type) {\n    case \"Area\":\n      return <Image src={process.env.PUBLIC_URL + \"/Area.png\"} />;\n    case \"Angle\":\n      return <Image src={process.env.PUBLIC_URL + \"/Angle.png\"} />;\n    case \"Length\":\n      return <Image src={process.env.PUBLIC_URL + \"/Length.png\"} />;\n    case \"POUA\":\n      return <Image src={process.env.PUBLIC_URL + \"/POUA.png\"} />;\n    case \"POCA\":\n      return <Image src={process.env.PUBLIC_URL + \"/POCA.png\"} />;\n    default:\n      return <></>;\n  }\n};\n\nconst RenderResults = ({ results }) => {\n  return (\n    <>\n      <MyRow>\n        <Col>More Accurate</Col>\n        <Col>Less Accurate</Col>\n      </MyRow>\n\n      {results.map((row) => (\n        <Col>\n          <TypeImage key={row[0]} type={row[0]} />\n        </Col>\n      ))}\n    </>\n  );\n};\n\nconst TypeSwitch = ({ data }) => {\n  console.log(data);\n  if (data.p) {\n    return <MyRow>{data.p}</MyRow>;\n  } else if (data.image) {\n    const image = data.image;\n    return (\n      <MyRow>\n        <Figure>\n          <Figure.Image\n            height={image.height ? image.height : \"100%\"}\n            width={image.width ? image.width : \"100%\"}\n            src={process.env.PUBLIC_URL + \"/\" + image.src}\n          />\n          <Figure.Caption>{image.caption}</Figure.Caption>\n        </Figure>\n      </MyRow>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst Information = ({ page, nextPage, exportStudy, results }) => {\n  if (page.finish === true) {\n    localStorage.clear();\n  }\n  return (\n    <>\n      <MyRow>\n        <h1>{page.title}</h1>\n      </MyRow>\n      {page.html &&\n        page.html.map((line, index) => (\n          <TypeSwitch key={index} data={line}></TypeSwitch>\n        ))}\n      <MyRow>\n        <br />\n      </MyRow>\n      {page.finish === true ? (\n        <>\n          <MyRow>\n            <RenderResults results={results} />\n          </MyRow>\n          <MyRow>\n            <Col>\n              <Button variant=\"secondary\" disabled>\n                Done\n              </Button>{\" \"}\n            </Col>\n          </MyRow>\n        </>\n      ) : (\n        <MyRow>\n          <Col>\n            <Button variant=\"secondary\" onClick={nextPage}>\n              Next\n            </Button>{\" \"}\n          </Col>\n        </MyRow>\n      )}\n    </>\n  );\n};\n\nexport default Information;\n","import { Row, Button } from \"react-bootstrap\";\n\nconst Break = ({ page, nextPage }) => {\n  return (\n    <>\n      <Row>\n        <h1>{page.title}</h1>\n      </Row>\n      <pre>{page.text}</pre>\n      {/* </Row> */}\n      <Button variant=\"secondary\" onClick={nextPage}>\n        Next\n      </Button>{\" \"}\n    </>\n  );\n};\n\nexport default Break;\n","import { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n/**\n * Hook, that returns the current dimensions of an HTML element.\n * Doesn't play well with SVG.\n */\n\nconst useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport useResizeObserver from \"../useResizeObserver\";\nimport \"./style.css\";\n\nconst margin = { top: 20, right: 30, bottom: 30, left: 30 };\nconst posX = [50, 100];\nconst Poca = ({ question, domain }) => {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (!question) return;\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n    // if(!properties) return;\n\n    //Grab the svg and set its viewbox\n    const svg = d3.select(svgRef.current);\n    svg.attr(\"viewBox\", [0, 0, width, height]);\n    const g = svg.select(\"g\");\n    const axis = [\n      [margin.left, domain[0] + margin.top],\n      [margin.left, domain[1] + margin.top],\n      [width - margin.right, domain[1] + margin.top],\n    ];\n    let data = [];\n    const chartHeight = domain[1] + margin.top;\n    if (question.sizes[2] === 0) {\n      data.push([posX[0], chartHeight - question.sizes[0], \"100\"]);\n      data.push([posX[1], chartHeight - question.sizes[1], \"?\"]);\n    } else {\n      data.push([posX[0], chartHeight - question.sizes[1], \"?\"]);\n      data.push([posX[1], chartHeight - question.sizes[0], \"100\"]);\n    }\n\n    //Data rename\n    g.selectAll(\".point\")\n      .data(data)\n      .join(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"stroke\", \"#000\")\n      .attr(\"cx\", (d) => d[0])\n      .attr(\"cy\", (d) => d[1])\n      .attr(\"fill\", \"black\")\n      .attr(\"r\", 5);\n\n    const axisLine = d3.line();\n    g.selectAll(\"path\")\n      .data([axis])\n      .join(\"path\")\n      .attr(\"d\", (value) => axisLine(value))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"black\");\n\n    g.selectAll(\".mytooltip\")\n      .data(data)\n      .join(\"text\")\n      .style(\"opacity\", 1)\n      .attr(\"class\", \"mytooltip\")\n      .text((d) => d[2])\n      .attr(\"x\", (d) => {\n        return d[0];\n      })\n      .attr(\"y\", (d) => d[1] - 10)\n      .attr(\"text-anchor\", \"middle\");\n  }, [dimensions, domain, question]);\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={{\n        marginBottom: \"2rem\",\n        width: \"400px\",\n        height: domain[1] + margin.top + margin.bottom,\n      }}\n    >\n      <svg ref={svgRef}>\n        <g />\n      </svg>\n    </div>\n  );\n};\n\nexport default Poca;\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport useResizeObserver from \"../useResizeObserver\";\nimport \"./style.css\";\n\nconst margin = { top: 20, right: 30, bottom: 30, left: 30 };\n\nconst posX = [150, 420];\nconst posY = [150, 150];\n\nconst Area = ({ question, domain }) => {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (!question) return;\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n    // if(!properties) return;\n\n    //Grab the svg and set its viewbox\n    const svg = d3.select(svgRef.current);\n    svg.attr(\"viewBox\", [0, 0, width, height]);\n    const g = svg.select(\"g\");\n    const chartHeight = domain[1] * 2 + margin.top;\n    let data = [];\n    if (question.sizes[2] === 0) {\n      data.push([posX[0], chartHeight - posY[0], question.sizes[0], \"100\"]);\n      data.push([posX[1], chartHeight - posY[1], question.sizes[1], \"?\"]);\n    } else {\n      data.push([posX[0], chartHeight - posY[0], question.sizes[1], \"?\"]);\n      data.push([posX[1], chartHeight - posY[1], question.sizes[0], \"100\"]);\n    }\n\n    //Data rename\n    g.selectAll(\".point\")\n      .data(data)\n      .join(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"stroke\", \"#000\")\n      .attr(\"cx\", (d) => d[0])\n      .attr(\"cy\", (d) => d[1])\n      .attr(\"fill\", \"black\")\n      .attr(\"r\", (d) => d[2]);\n\n    g.selectAll(\".mytooltip\")\n      .data(data)\n      .join(\"text\")\n      .style(\"opacity\", 1)\n      .attr(\"class\", \"mytooltip\")\n      .text((d) => d[3])\n      .attr(\"x\", (d) => {\n        return d[0];\n      })\n      .attr(\"y\", (d) => height - margin.bottom)\n      .attr(\"text-anchor\", \"middle\");\n  }, [dimensions, domain, question]);\n  return (\n    <div\n      ref={wrapperRef}\n      style={{\n        marginBottom: \"2rem\",\n        width: \"600px\",\n        height: domain[1] * 2 + margin.top + margin.bottom,\n      }}\n    >\n      <svg ref={svgRef}>\n        <g />\n      </svg>\n    </div>\n  );\n};\n\nexport default Area;\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport useResizeObserver from \"../useResizeObserver\";\nimport \"./style.css\";\n\nconst margin = { top: 20, right: 30, bottom: 30, left: 30 };\nconst cordLength = 80;\nconst xPos = 100;\nconst yPos = 100;\n\nconst drawAngle = (g, svg, data, translate, name, symbol) => {\n  const radialLineGen = d3.lineRadial();\n  const axisLine = radialLineGen(data);\n  g.selectAll(\".path_\" + name)\n    .data([data])\n    .join(\"path\")\n    .attr(\"class\", \"path_\" + name)\n    .attr(\"d\", axisLine)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"black\");\n\n  svg\n    .selectAll(\".path_\" + name)\n    .attr(\"transform\", `translate(${translate[0]}, ${translate[1]})`);\n\n  g.selectAll(\".mytooltip_\" + name)\n    .data([translate])\n    .join(\"text\")\n    .style(\"opacity\", 1)\n    .attr(\"class\", \"mytooltip_\" + name)\n    .text((d) => symbol)\n    .attr(\"x\", (d) => d[0])\n    .attr(\"y\", (d) => d[1] + cordLength + margin.bottom / 2 + 4)\n    .attr(\"text-anchor\", \"middle\");\n};\n\nconst Angle = ({ question, domain }) => {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (!question) return;\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n    // if(!properties) return;\n\n    //Grab the svg and set its viewbox\n    const svg = d3.select(svgRef.current);\n    svg.attr(\"viewBox\", [0, 0, width, height]);\n    const g = svg.select(\"g\");\n\n    const radians = (value) => {\n      return (value * Math.PI) / 180;\n    };\n\n    let data = [];\n    if (question.sizes[2] === 0) {\n      data.push([radians(question.sizes[3]), cordLength]);\n      data.push([radians(question.sizes[3]), 0]);\n      data.push([radians(question.sizes[3] + question.sizes[0]), cordLength]);\n      data.push([radians(question.sizes[4]), cordLength]);\n      data.push([radians(question.sizes[4]), 0]);\n      data.push([radians(question.sizes[4] + question.sizes[1]), cordLength]);\n      drawAngle(g, svg, data.slice(0, 3), [xPos, yPos], \"radial1\", \"100\");\n      drawAngle(\n        g,\n        svg,\n        data.slice(3, 6),\n        [xPos + cordLength * 2.1, yPos],\n        \"radial2\",\n        \"?\"\n      );\n    } else {\n      data.push([radians(question.sizes[4]), cordLength]);\n      data.push([radians(question.sizes[4]), 0]);\n      data.push([radians(question.sizes[4] + question.sizes[1]), cordLength]);\n      data.push([radians(question.sizes[3]), cordLength]);\n      data.push([radians(question.sizes[3]), 0]);\n      data.push([radians(question.sizes[3] + question.sizes[0]), cordLength]);\n      drawAngle(g, svg, data.slice(0, 3), [xPos, yPos], \"radial1\", \"?\");\n      drawAngle(\n        g,\n        svg,\n        data.slice(3, 6),\n        [xPos + cordLength * 2.1, yPos],\n        \"radial2\",\n        \"100\"\n      );\n    }\n  }, [dimensions, domain, question]);\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={{\n        marginBottom: \"2rem\",\n        width: \"400px\",\n        height: domain[1] + margin.top + margin.bottom,\n      }}\n    >\n      <svg ref={svgRef}>\n        <g />\n      </svg>\n    </div>\n  );\n};\n\nexport default Angle;\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport useResizeObserver from \"../useResizeObserver\";\nimport \"./style.css\";\n\nconst margin = { top: 20, right: 30, bottom: 30, left: 30 };\nconst xPos = [50, 100];\n\nconst Length = ({ question, domain }) => {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (!question) return;\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n    // if(!properties) return;\n\n    //Grab the svg and set its viewbox\n    const svg = d3.select(svgRef.current);\n    svg.attr(\"viewBox\", [0, 0, width, height]);\n    const g = svg.select(\"g\");\n    const axis = [\n      [margin.left, domain[0] + margin.top],\n      [margin.left, domain[1] + margin.top],\n      [width - margin.right, domain[1] + margin.top],\n    ];\n    const chartHeight = domain[1] + margin.top;\n    let data = [];\n    if (question.sizes[2] === 0) {\n      data.push([\n        xPos[0],\n        chartHeight - question.sizes[3] - question.sizes[0],\n        25,\n        question.sizes[0],\n        \"100\",\n      ]);\n      data.push([\n        xPos[1],\n        chartHeight - question.sizes[4] - question.sizes[1],\n        25,\n        question.sizes[1],\n        \"?\",\n      ]);\n    } else {\n      data.push([\n        xPos[0],\n        chartHeight - question.sizes[4] - question.sizes[1],\n        25,\n        question.sizes[1],\n        \"?\",\n      ]);\n      data.push([\n        xPos[1],\n        chartHeight - question.sizes[3] - question.sizes[0],\n        25,\n        question.sizes[0],\n        \"100\",\n      ]);\n    }\n\n    //Data rename\n    g.selectAll(\".rect\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"rect\")\n      .attr(\"stroke\", \"#000\")\n      .attr(\"x\", (d) => d[0])\n      .attr(\"y\", (d) => d[1])\n      .attr(\"width\", (d) => d[2])\n      .attr(\"height\", (d) => d[3])\n      .attr(\"fill\", \"black\");\n\n    // const axisLine = d3.line();\n    // g.selectAll(\"path\")\n    //   .data([axis])\n    //   .join(\"path\")\n    //   .attr(\"d\", (value) => axisLine(value))\n    //   .attr(\"fill\", \"none\")\n    //   .attr(\"stroke\", \"black\");\n\n    g.selectAll(\".mytooltip\")\n      .data(data)\n      .join(\"text\")\n      .style(\"opacity\", 1)\n      .style(\"font\", \"14px sans-serif\")\n      .attr(\"class\", \"mytooltip\")\n      .text((d) => d[4])\n      .attr(\"x\", (d) => {\n        if (d[0] === xPos[0]) {\n          return d[0] - 20;\n        } else {\n          return d[0] + d[2] + 15;\n        }\n      })\n\n      .attr(\"y\", (d) => d[1] + d[3] / 2)\n      .attr(\"text-anchor\", \"middle\");\n  }, [dimensions, domain, question]);\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={{\n        marginBottom: \"2rem\",\n        width: \"400px\",\n        height: domain[1] + margin.top + margin.bottom,\n      }}\n    >\n      <svg ref={svgRef}>\n        <g />\n      </svg>\n    </div>\n  );\n};\n\nexport default Length;\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport useResizeObserver from \"../useResizeObserver\";\nimport \"./style.css\";\n\nconst margin = { top: 20, right: 30, bottom: 30, left: 30, between: 50 };\nconst chartWidth = 400;\nconst posX = 50;\nconst generatePlot = (svg, question, leftTop, rightBottom, name) => {\n  //Grab the svg and set its viewbox\n  const g = svg.select(\"g\");\n  const axis = [\n    [leftTop[0], leftTop[1]],\n    [leftTop[0], rightBottom[1]],\n    [rightBottom[0], rightBottom[1]],\n  ];\n  let data = [];\n  data.push([posX, rightBottom[1] - question[0], question[1]]);\n\n  // Data rename\n  g.selectAll(\".point_\" + name)\n    .data(data)\n    .join(\"circle\")\n    .attr(\"class\", \"point_\" + name)\n    .attr(\"stroke\", \"#000\")\n    .attr(\"cx\", (d) => d[0])\n    .attr(\"cy\", (d) => d[1])\n    .attr(\"fill\", \"black\")\n    .attr(\"r\", 5);\n\n  const axisLine = d3.line();\n  g.selectAll(\".path_\" + name)\n    .data([axis])\n    .join(\"path\")\n    .attr(\"class\", \"path_\" + name)\n    .attr(\"d\", (value) => axisLine(value))\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"black\");\n\n  g.selectAll(\".mytooltip_\" + name)\n    .data(data)\n    .join(\"text\")\n    .style(\"opacity\", 1)\n    .attr(\"class\", \"mytooltip_\" + name)\n    .text((d) => d[2])\n    .attr(\"x\", (d) => {\n      return d[0];\n    })\n    .attr(\"y\", (d) => d[1] - 10)\n    .attr(\"text-anchor\", \"middle\");\n};\n\nconst Poua = ({ question, domain }) => {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    if (!question) return;\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n    // if(!properties) return;\n    const svg = d3.select(svgRef.current);\n    svg.attr(\"viewBox\", [0, 0, width, height]);\n    let data = [];\n    if (question.sizes[2] === 0) {\n      data.push([question.sizes[0], \"100\"]);\n      data.push([question.sizes[1], \"?\"]);\n    } else {\n      data.push([question.sizes[1], \"?\"]);\n      data.push([question.sizes[0], \"100\"]);\n    }\n    generatePlot(\n      svg,\n      data[0],\n      [margin.left, margin.top],\n      [margin.left + chartWidth, domain[1] + margin.top],\n      \"chart1\"\n    );\n    generatePlot(\n      svg,\n      data[1],\n      [margin.left, domain[1] + margin.top + margin.between],\n      [margin.left + chartWidth, domain[1] * 2 + margin.top + margin.between],\n      \"chart2\"\n    );\n  }, [dimensions, domain, question]);\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={{\n        marginBottom: \"2rem\",\n        width: chartWidth,\n        height: domain[1] * 2 + margin.top + margin.bottom + margin.between,\n      }}\n    >\n      <svg ref={svgRef}>\n        <g />\n      </svg>\n    </div>\n  );\n};\n\nexport default Poua;\n","import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Col, Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport Poca from \"../../../Components/Poca/Poca\";\nimport Area from \"../../../Components/Area/Area\";\nimport Angle from \"../../../Components/Angle/Angle\";\nimport Length from \"../../../Components/Length/Length\";\nimport Poua from \"../../../Components/Poua/Poua\";\nimport { MyRow } from \"./style\";\n\nconst Section = ({ page, data, saveAnswer, nextQuestion, questionIndex }) => {\n  const [array, setArray] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n\n  function handleNextQuestion(event) {\n    event.preventDefault();\n    if (answer === \"\") {\n      alert(\"Please type a number before hitting next.\");\n      return;\n    } else if (isNaN(Number(answer)) === true) {\n      alert(\"Please make sure to type a number before hitting next.\");\n      return;\n    } else if (Number(answer) < 0 || Number(answer) > 100) {\n      alert(\"The number must be between 0 and 100.\");\n      return;\n    }\n    const answerName = data.answerName[questionIndex].toString();\n    console.log(saveAnswer);\n    saveAnswer(answerName, answer).then(function (response) {\n      setAnswer(\"\");\n      nextQuestion(array.length);\n    });\n  }\n\n  function onChange(value) {\n    setAnswer(value);\n  }\n\n  useEffect(() => {\n    let lengths = [];\n    let array = [];\n    for (let used of page.valuesUsed) {\n      let usedLength = 0;\n      if (Array.isArray(data[used])) {\n        usedLength = data[used].length;\n      } else {\n        usedLength = 1;\n      }\n\n      lengths.push(usedLength);\n    }\n    const maxLength = Math.max(...lengths);\n    for (var i = 0; i < maxLength; i++) {\n      let row = {};\n      let index = 0;\n      for (let used of page.valuesUsed) {\n        const usedLength = lengths[index];\n        index++;\n        if (usedLength === 1) {\n          row[used] = data[used];\n        } else if (usedLength === maxLength) {\n          row[used] = data[used][i];\n        } else {\n          console.log(\n            \"Something went wrong with number entries don't match max:\",\n            maxLength,\n            \"or 1:\",\n            used\n          );\n        }\n      }\n      array.push(row);\n    }\n    setArray(array);\n  }, [data, page]);\n\n  const typeRendering = (data, array, index, domain) => {\n    switch (data.type) {\n      case \"POCA\":\n        return <Poca question={array[index]} domain={domain} />;\n      case \"Angle\":\n        return <Angle question={array[index]} domain={domain} />;\n      case \"Area\":\n        return <Area question={array[index]} domain={domain} />;\n      case \"Length\":\n        return <Length question={array[index]} domain={domain} />;\n      case \"POUA\":\n        return <Poua question={array[index]} domain={domain} />;\n      default:\n        throw new Error(\"Missing type of testing Section.\");\n    }\n  };\n\n  return (\n    <>\n      <MyRow>{typeRendering(data, array, questionIndex, data.Domain)}</MyRow>\n      <MyRow>{array[questionIndex] && array[questionIndex].Question}</MyRow>\n      <MyRow>\n        <Col md={2}>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"\"\n            id=\"Answer\"\n            onChange={(e) => onChange(e.target.value)}\n            value={answer}\n          />\n        </Col>\n      </MyRow>\n      <MyRow>\n        <br />\n      </MyRow>\n      <MyRow>\n        <Col>\n          <Button variant=\"secondary\" onClick={handleNextQuestion}>\n            Next\n          </Button>{\" \"}\n        </Col>\n      </MyRow>\n    </>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport Demographics from \"./Demographic/Demographic\";\nimport Information from \"./Information/Information\";\nimport Break from \"./Break/Break\";\nimport Section from \"./Section/Section\";\n\nconst Option = ({\n  page,\n  data,\n  practiceQuestions,\n  grabInformation,\n  saveAnswer,\n  savePracticeAnswer,\n  questionIndex,\n  exportStudy,\n  nextQuestion,\n  nextPage,\n  results,\n}) => {\n  if (page.type === \"Demographic\") {\n    return (\n      <Demographics\n        page={page}\n        grabInformation={grabInformation}\n        nextPage={nextPage}\n      />\n    );\n  } else if (page.type === \"Information\") {\n    return (\n      <Information\n        page={page}\n        nextPage={nextPage}\n        exportStudy={exportStudy}\n        results={results}\n      />\n    );\n  } else if (page.type === \"Check\") {\n    return (\n      <Information\n        page={page}\n        nextPage={nextPage}\n        exportStudy={exportStudy}\n        results={results}\n      />\n    );\n  } else if (page.type === \"Section\") {\n    return (\n      <Section\n        page={page}\n        data={data[page.position]}\n        saveAnswer={saveAnswer}\n        questionIndex={questionIndex}\n        nextQuestion={nextQuestion}\n      />\n    );\n  } else if (page.type === \"Practice\") {\n    return (\n      <Section\n        page={page}\n        data={practiceQuestions[page.position]}\n        saveAnswer={savePracticeAnswer}\n        questionIndex={questionIndex}\n        nextQuestion={nextQuestion}\n      />\n    );\n  } else if (page.type === \"Break\") {\n    return <Break page={page} nextPage={nextPage} />;\n  } else {\n    console.log(\"Page missing\", page.type);\n    return <></>;\n  }\n};\n\nconst Pages = ({\n  siteStructure,\n  data,\n  grabInformation,\n  practiceQuestions,\n  currPage,\n  sessionID,\n  saveAnswer,\n  savePracticeAnswer,\n  nextPage,\n  exportStudy,\n  nextQuestion,\n  questionIndex,\n  results,\n}) => {\n  return (\n    <>\n      {siteStructure.pages && (\n        <Option\n          key={currPage}\n          page={siteStructure.pages[currPage]}\n          data={data[sessionID]}\n          practiceQuestions={practiceQuestions}\n          grabInformation={grabInformation}\n          saveAnswer={saveAnswer}\n          savePracticeAnswer={savePracticeAnswer}\n          exportStudy={exportStudy}\n          nextPage={nextPage}\n          nextQuestion={nextQuestion}\n          questionIndex={questionIndex}\n          results={results}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Pages;\n","import { Container, ProgressBar } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nexport const MyContainer = styled(Container)`\n  background-color: white;\n  min-height: 600px;\n`;\n\nexport const MyDiv = styled.div`\n  background-color: lightgray;\n  display: flex;\n  flex-flow: column;\n  min-height: 100vh;\n`;\n\nexport const MyProgressBar = styled(ProgressBar)`\n  width: 100vw;\n  color: ${(props) => props.barColor};\n`;\n","import React from \"react\";\nimport studyData from \"../Data/studyData.json\";\nimport studyMeta from \"../Data/studyMeta.json\";\nimport practiceQuestions from \"../Data/dataForPractice.json\";\nimport Pages from \"./Pages/Pages\";\nimport { MyContainer, MyDiv, MyProgressBar } from \"./style\";\nimport { Navbar } from \"react-bootstrap\";\nimport nodemailer from \"nodemailer\";\nimport emailjs from \"emailjs-com\";\n\nclass Section extends React.Component {\n  state = {\n    data: {},\n    siteStructure: {},\n    progress: 0,\n    currSession: { currPage: 0, id: 0, questionIndex: 0 },\n    answers: [],\n    practiceAnswers: [],\n    results: [],\n    practiceQuestions: [],\n  };\n\n  componentDidMount() {\n    const data = studyData;\n    const siteStructure = studyMeta;\n    const practice = practiceQuestions[0];\n    this.setState({\n      data: data,\n      siteStructure: siteStructure,\n      practiceQuestions: practice,\n    });\n    const progress = localStorage.getItem(\"Progress\");\n    const progressLabel = localStorage.getItem(\"ProgressLabel\");\n    const currSession = localStorage.getItem(\"currSession\");\n    const answers = localStorage.getItem(\"answers\");\n    const practiceAnswers = localStorage.getItem(\"practiceAnswers\");\n\n    if (progress) {\n      this.setState({ progress: progress });\n    }\n    if (progressLabel) {\n      this.setState({ progressLabel: progressLabel });\n    }\n    if (currSession) {\n      this.setState({ currSession: JSON.parse(currSession) });\n    } else {\n      this.setState({ currSession: { currPage: 0, id: 0 } });\n    }\n    if (answers) {\n      this.setState({ answers: JSON.parse(answers) });\n    }\n    if (practiceAnswers) {\n      this.setState({ practiceAnswers: JSON.parse(practiceAnswers) });\n    }\n  }\n\n  calculateAccuracy = () => {\n    const dataAnswer = this.state.data[this.state.currSession.id];\n\n    let results = [];\n    if (dataAnswer === undefined) {\n      return;\n    }\n\n    dataAnswer.map((type, index) => {\n      const currType = type.type;\n      let total = 0.0;\n      const size = type.answerName.length;\n      for (let i = 0; i < size; i++) {\n        const answerLst = this.state.answers[i + index * size];\n        console.log(answerLst);\n        console.log(i + index * size, this.state.answers);\n        const answer = parseFloat(answerLst[0].split(\",\")[1]);\n        total += Math.abs(answer * 100 - parseInt(answerLst[1]));\n      }\n      results.push([currType, total]);\n    });\n    results.sort(function (a, b) {\n      return a[1] - b[1];\n    });\n    this.setState({ results: results });\n  };\n\n  nextPage = () => {\n    const currSession = this.state.currSession;\n    currSession.currPage += 1;\n    currSession.questionIndex = 0;\n    this.setProgressBar(0, \"\");\n\n    const page = this.state.siteStructure.pages[currSession.currPage];\n\n    if (page.type === \"Check\") {\n      if (!this.checkPracticeQuestions()) {\n        currSession.currPage = this.state.siteStructure.pages.length - 1;\n      }\n    }\n\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n    if (page.finish && page.finish === true) {\n      this.exportStudy();\n    }\n  };\n\n  setProgressBar = (value, label) => {\n    localStorage.setItem(\"Progress\", value);\n    localStorage.setItem(\"ProgressLabel\", label);\n    this.setState({ progress: value, progressLabel: label });\n  };\n\n  nextQuestion = (length) => {\n    const currSession = this.state.currSession;\n    currSession.questionIndex += 1;\n    if (currSession.questionIndex === length) {\n      this.nextPage();\n      return;\n    }\n    this.setProgressBar(\n      (currSession.questionIndex / length) * 100,\n      \"Question \" + currSession.questionIndex + \" / \" + length\n    );\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n  };\n\n  checkPracticeQuestions = () => {\n    //group similar properties\n    const answers = this.state.practiceAnswers;\n    let grouping = {};\n    for (let answer of answers) {\n      const type = answer[0].split(\",\")[0];\n      if (type in grouping) {\n        grouping[type].push(answer);\n      } else {\n        grouping[type] = [answer];\n      }\n    }\n    for (const [, lst] of Object.entries(grouping)) {\n      let incorrect = 0;\n      for (const answer of lst) {\n        const portion = answer[0].split(\",\")[1];\n        const results = parseInt(answer[1]);\n        if (Math.abs(results - portion * 100) >= 30) {\n          incorrect++;\n        }\n      }\n      if (incorrect > 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  grabInformation = (data) => {\n    console.log(\"grab Information\");\n    const currSession = this.state.currSession;\n    currSession.demographic = data;\n    const sessionID = this.state.siteStructure.meta.sessionID;\n    if (sessionID in data) {\n      currSession.id = data[sessionID] % 38;\n    }\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n  };\n\n  saveAnswer = (field, answer) => {\n    const newAnswers = this.state.answers.slice();\n    newAnswers.push([field, answer]);\n    localStorage.setItem(\"answers\", JSON.stringify(newAnswers));\n    this.setState({ answers: newAnswers });\n    return Promise.resolve(newAnswers);\n  };\n\n  savePracticeAnswer = (field, answer) => {\n    const newAnswers = this.state.practiceAnswers.slice();\n    newAnswers.push([field, answer]);\n    localStorage.setItem(\"practiceAnswers\", JSON.stringify(newAnswers));\n    this.setState({ practiceAnswers: newAnswers });\n    return Promise.resolve(newAnswers);\n  };\n\n  exportStudy = () => {\n    this.calculateAccuracy();\n\n    let jsonFile = {\n      session: this.state.currSession,\n      answers: this.state.answers,\n    };\n\n    var jsonse = JSON.stringify(jsonFile, null, 2);\n    var templateParams = {\n      message: jsonse,\n    };\n\n    emailjs\n      .send(\n        \"service_uqj09id\",\n        \"template_x7pswr4\",\n        templateParams,\n        \"user_Kx3a55DXNWeuop9rui5RR\"\n      )\n      .then(\n        function (response) {\n          console.log(\"SUCCESS!\", response.status, response.text);\n        },\n        function (error) {\n          console.log(\"FAILED...\", error);\n        }\n      );\n  };\n  render() {\n    return (\n      <MyDiv>\n        <MyContainer>\n          <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n            <MyProgressBar\n              now={this.state.progress}\n              label={this.state.progressLabel}\n            />\n          </Navbar>\n          <Pages\n            siteStructure={this.state.siteStructure}\n            currPage={\n              this.state.currSession != null\n                ? this.state.currSession.currPage\n                : undefined\n            }\n            data={this.state.data}\n            sessionID={\n              this.state.currSession != null\n                ? this.state.currSession.id\n                : undefined\n            }\n            practiceQuestions={this.state.practiceQuestions}\n            grabInformation={this.grabInformation}\n            saveAnswer={this.saveAnswer}\n            savePracticeAnswer={this.savePracticeAnswer}\n            nextPage={this.nextPage}\n            nextQuestion={this.nextQuestion}\n            exportStudy={this.exportStudy}\n            results={this.state.results}\n            questionIndex={\n              this.state.currSession != null\n                ? this.state.currSession.questionIndex\n                : undefined\n            }\n          />\n        </MyContainer>\n      </MyDiv>\n    );\n  }\n}\n\nexport default Section;\n","import './App.css';\nimport Section from './Section'\n\nfunction App() {\n  return <Section/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}